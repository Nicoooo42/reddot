{"file":"C:\\Users\\Nicolas\\Desktop\\test6\\gateway\\src\\main\\webapp\\app\\admin\\metrics\\metrics.component.spec.ts","mappings":";;AAAA,mDAAgF;AAChF,0DAAuE;AACvE,+BAA0B;AAE1B,2DAAuD;AACvD,uDAAmD;AAGnD,QAAQ,CAAC,kBAAkB,EAAE,GAAG,EAAE;IAChC,IAAI,IAAsB,CAAC;IAC3B,IAAI,OAA2C,CAAC;IAChD,IAAI,OAAuB,CAAC;IAE5B,UAAU,CACR,sBAAY,CAAC,GAAG,EAAE;QAChB,iBAAO,CAAC,sBAAsB,CAAC;YAC7B,OAAO,EAAE,CAAC,iCAAuB,CAAC;YAClC,YAAY,EAAE,CAAC,oCAAgB,CAAC;SACjC,CAAC;aACC,gBAAgB,CAAC,oCAAgB,EAAE,EAAE,CAAC;aACtC,iBAAiB,EAAE,CAAC;IACzB,CAAC,CAAC,CACH,CAAC;IAEF,UAAU,CAAC,GAAG,EAAE;QACd,OAAO,GAAG,iBAAO,CAAC,eAAe,CAAC,oCAAgB,CAAC,CAAC;QACpD,IAAI,GAAG,OAAO,CAAC,iBAAiB,CAAC;QACjC,OAAO,GAAG,iBAAO,CAAC,MAAM,CAAC,gCAAc,CAAC,CAAC;IAC3C,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,SAAS,EAAE,GAAG,EAAE;QACvB,EAAE,CAAC,6BAA6B,EAAE,GAAG,EAAE;YACrC,QAAQ;YACR,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,YAAY,CAAC,CAAC,eAAe,CAAC,SAAE,CAAC,EAAa,CAAC,CAAC,CAAC;YAErE,OAAO;YACP,IAAI,CAAC,QAAQ,EAAE,CAAC;YAEhB,OAAO;YACP,MAAM,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,gBAAgB,EAAE,CAAC;QAChD,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","names":[],"sources":["C:\\Users\\Nicolas\\Desktop\\test6\\gateway\\src\\main\\webapp\\app\\admin\\metrics\\metrics.component.spec.ts"],"sourcesContent":["import { ComponentFixture, TestBed, waitForAsync } from '@angular/core/testing';\nimport { HttpClientTestingModule } from '@angular/common/http/testing';\nimport { of } from 'rxjs';\n\nimport { MetricsComponent } from './metrics.component';\nimport { MetricsService } from './metrics.service';\nimport { Metrics } from './metrics.model';\n\ndescribe('MetricsComponent', () => {\n  let comp: MetricsComponent;\n  let fixture: ComponentFixture<MetricsComponent>;\n  let service: MetricsService;\n\n  beforeEach(\n    waitForAsync(() => {\n      TestBed.configureTestingModule({\n        imports: [HttpClientTestingModule],\n        declarations: [MetricsComponent],\n      })\n        .overrideTemplate(MetricsComponent, '')\n        .compileComponents();\n    })\n  );\n\n  beforeEach(() => {\n    fixture = TestBed.createComponent(MetricsComponent);\n    comp = fixture.componentInstance;\n    service = TestBed.inject(MetricsService);\n  });\n\n  describe('refresh', () => {\n    it('should call refresh on init', () => {\n      // GIVEN\n      jest.spyOn(service, 'getMetrics').mockReturnValue(of({} as Metrics));\n\n      // WHEN\n      comp.ngOnInit();\n\n      // THEN\n      expect(service.getMetrics).toHaveBeenCalled();\n    });\n  });\n});\n"],"version":3}