{"file":"C:\\Users\\Nicolas\\Desktop\\test6\\gateway\\src\\main\\webapp\\app\\layouts\\main\\main.component.spec.ts","mappings":"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","names":[],"sources":["C:\\Users\\Nicolas\\Desktop\\test6\\gateway\\src\\main\\webapp\\app\\layouts\\main\\main.component.spec.ts"],"sourcesContent":["jest.mock('app/core/auth/account.service');\n\nimport { waitForAsync, ComponentFixture, TestBed } from '@angular/core/testing';\nimport { Router, RouterEvent, NavigationEnd, NavigationStart } from '@angular/router';\nimport { Title } from '@angular/platform-browser';\nimport { Subject, of } from 'rxjs';\nimport { TranslateModule, TranslateService, LangChangeEvent } from '@ngx-translate/core';\n\nimport { AccountService } from 'app/core/auth/account.service';\n\nimport { MainComponent } from './main.component';\n\ndescribe('MainComponent', () => {\n  let comp: MainComponent;\n  let fixture: ComponentFixture<MainComponent>;\n  let titleService: Title;\n  let translateService: TranslateService;\n  let mockAccountService: AccountService;\n  const routerEventsSubject = new Subject<RouterEvent>();\n  const routerState: any = { snapshot: { root: { data: {} } } };\n  class MockRouter {\n    events = routerEventsSubject;\n    routerState = routerState;\n  }\n\n  beforeEach(\n    waitForAsync(() => {\n      TestBed.configureTestingModule({\n        imports: [TranslateModule.forRoot()],\n        declarations: [MainComponent],\n        providers: [\n          Title,\n          AccountService,\n          {\n            provide: Router,\n            useClass: MockRouter,\n          },\n        ],\n      })\n        .overrideTemplate(MainComponent, '')\n        .compileComponents();\n    })\n  );\n\n  beforeEach(() => {\n    fixture = TestBed.createComponent(MainComponent);\n    comp = fixture.componentInstance;\n    titleService = TestBed.inject(Title);\n    translateService = TestBed.inject(TranslateService);\n    mockAccountService = TestBed.inject(AccountService);\n    mockAccountService.identity = jest.fn(() => of(null));\n    mockAccountService.getAuthenticationState = jest.fn(() => of(null));\n  });\n\n  describe('page title', () => {\n    const defaultPageTitle = 'global.title';\n    const parentRoutePageTitle = 'parentTitle';\n    const childRoutePageTitle = 'childTitle';\n    const navigationEnd = new NavigationEnd(1, '', '');\n    const navigationStart = new NavigationStart(1, '');\n    const langChangeEvent: LangChangeEvent = { lang: 'fr', translations: null };\n\n    beforeEach(() => {\n      routerState.snapshot.root = { data: {} };\n      jest.spyOn(translateService, 'get').mockImplementation((key: string | string[]) => of(`${key as string} translated`));\n      translateService.currentLang = 'fr';\n      jest.spyOn(titleService, 'setTitle');\n      comp.ngOnInit();\n    });\n\n    describe('navigation end', () => {\n      it('should set page title to default title if pageTitle is missing on routes', () => {\n        // WHEN\n        routerEventsSubject.next(navigationEnd);\n\n        // THEN\n        expect(translateService.get).toHaveBeenCalledWith(defaultPageTitle);\n        expect(titleService.setTitle).toHaveBeenCalledWith(defaultPageTitle + ' translated');\n      });\n\n      it('should set page title to root route pageTitle if there is no child routes', () => {\n        // GIVEN\n        routerState.snapshot.root.data = { pageTitle: parentRoutePageTitle };\n\n        // WHEN\n        routerEventsSubject.next(navigationEnd);\n\n        // THEN\n        expect(translateService.get).toHaveBeenCalledWith(parentRoutePageTitle);\n        expect(titleService.setTitle).toHaveBeenCalledWith(parentRoutePageTitle + ' translated');\n      });\n\n      it('should set page title to child route pageTitle if child routes exist and pageTitle is set for child route', () => {\n        // GIVEN\n        routerState.snapshot.root.data = { pageTitle: parentRoutePageTitle };\n        routerState.snapshot.root.firstChild = { data: { pageTitle: childRoutePageTitle } };\n\n        // WHEN\n        routerEventsSubject.next(navigationEnd);\n\n        // THEN\n        expect(translateService.get).toHaveBeenCalledWith(childRoutePageTitle);\n        expect(titleService.setTitle).toHaveBeenCalledWith(childRoutePageTitle + ' translated');\n      });\n\n      it('should set page title to parent route pageTitle if child routes exists but pageTitle is not set for child route data', () => {\n        // GIVEN\n        routerState.snapshot.root.data = { pageTitle: parentRoutePageTitle };\n        routerState.snapshot.root.firstChild = { data: {} };\n\n        // WHEN\n        routerEventsSubject.next(navigationEnd);\n\n        // THEN\n        expect(translateService.get).toHaveBeenCalledWith(parentRoutePageTitle);\n        expect(titleService.setTitle).toHaveBeenCalledWith(parentRoutePageTitle + ' translated');\n      });\n    });\n\n    describe('navigation start', () => {\n      it('should not set page title on navigation start', () => {\n        // WHEN\n        routerEventsSubject.next(navigationStart);\n\n        // THEN\n        expect(titleService.setTitle).not.toHaveBeenCalled();\n      });\n    });\n\n    describe('language change', () => {\n      it('should set page title to default title if pageTitle is missing on routes', () => {\n        // WHEN\n        translateService.onLangChange.emit(langChangeEvent);\n\n        // THEN\n        expect(translateService.get).toHaveBeenCalledWith(defaultPageTitle);\n        expect(titleService.setTitle).toHaveBeenCalledWith(defaultPageTitle + ' translated');\n      });\n\n      it('should set page title to root route pageTitle if there is no child routes', () => {\n        // GIVEN\n        routerState.snapshot.root.data = { pageTitle: parentRoutePageTitle };\n\n        // WHEN\n        translateService.onLangChange.emit(langChangeEvent);\n\n        // THEN\n        expect(translateService.get).toHaveBeenCalledWith(parentRoutePageTitle);\n        expect(titleService.setTitle).toHaveBeenCalledWith(parentRoutePageTitle + ' translated');\n      });\n\n      it('should set page title to child route pageTitle if child routes exist and pageTitle is set for child route', () => {\n        // GIVEN\n        routerState.snapshot.root.data = { pageTitle: parentRoutePageTitle };\n        routerState.snapshot.root.firstChild = { data: { pageTitle: childRoutePageTitle } };\n\n        // WHEN\n        translateService.onLangChange.emit(langChangeEvent);\n\n        // THEN\n        expect(translateService.get).toHaveBeenCalledWith(childRoutePageTitle);\n        expect(titleService.setTitle).toHaveBeenCalledWith(childRoutePageTitle + ' translated');\n      });\n\n      it('should set page title to parent route pageTitle if child routes exists but pageTitle is not set for child route data', () => {\n        // GIVEN\n        routerState.snapshot.root.data = { pageTitle: parentRoutePageTitle };\n        routerState.snapshot.root.firstChild = { data: {} };\n\n        // WHEN\n        translateService.onLangChange.emit(langChangeEvent);\n\n        // THEN\n        expect(translateService.get).toHaveBeenCalledWith(parentRoutePageTitle);\n        expect(titleService.setTitle).toHaveBeenCalledWith(parentRoutePageTitle + ' translated');\n      });\n    });\n  });\n\n  describe('page language attribute', () => {\n    it('should change page language attribute on language change', () => {\n      // GIVEN\n      comp.ngOnInit();\n\n      // WHEN\n      translateService.onLangChange.emit({ lang: 'lang1', translations: null });\n\n      // THEN\n      expect(document.querySelector('html')?.getAttribute('lang')).toEqual('lang1');\n\n      // WHEN\n      translateService.onLangChange.emit({ lang: 'lang2', translations: null });\n\n      // THEN\n      expect(document.querySelector('html')?.getAttribute('lang')).toEqual('lang2');\n    });\n  });\n});\n"],"version":3}