{"file":"C:\\Users\\Nicolas\\Desktop\\test6\\gateway\\src\\main\\webapp\\app\\home\\home.component.spec.ts","mappings":"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","names":[],"sources":["C:\\Users\\Nicolas\\Desktop\\test6\\gateway\\src\\main\\webapp\\app\\home\\home.component.spec.ts"],"sourcesContent":["jest.mock('app/core/auth/account.service');\njest.mock('@angular/router');\n\nimport { ComponentFixture, TestBed, waitForAsync } from '@angular/core/testing';\nimport { Router } from '@angular/router';\nimport { of, Subject } from 'rxjs';\n\nimport { AccountService } from 'app/core/auth/account.service';\nimport { Account } from 'app/core/auth/account.model';\n\nimport { HomeComponent } from './home.component';\n\ndescribe('Home Component', () => {\n  let comp: HomeComponent;\n  let fixture: ComponentFixture<HomeComponent>;\n  let mockAccountService: AccountService;\n  let mockRouter: Router;\n  const account: Account = {\n    activated: true,\n    authorities: [],\n    email: '',\n    firstName: null,\n    langKey: '',\n    lastName: null,\n    login: 'login',\n    imageUrl: null,\n  };\n\n  beforeEach(\n    waitForAsync(() => {\n      TestBed.configureTestingModule({\n        declarations: [HomeComponent],\n        providers: [AccountService, Router],\n      })\n        .overrideTemplate(HomeComponent, '')\n        .compileComponents();\n    })\n  );\n\n  beforeEach(() => {\n    fixture = TestBed.createComponent(HomeComponent);\n    comp = fixture.componentInstance;\n    mockAccountService = TestBed.inject(AccountService);\n    mockAccountService.identity = jest.fn(() => of(null));\n    mockAccountService.getAuthenticationState = jest.fn(() => of(null));\n    mockRouter = TestBed.inject(Router);\n  });\n\n  describe('ngOnInit', () => {\n    it('Should synchronize account variable with current account', () => {\n      // GIVEN\n      const authenticationState = new Subject<Account | null>();\n      mockAccountService.getAuthenticationState = jest.fn(() => authenticationState.asObservable());\n\n      // WHEN\n      comp.ngOnInit();\n\n      // THEN\n      expect(comp.account).toBeNull();\n\n      // WHEN\n      authenticationState.next(account);\n\n      // THEN\n      expect(comp.account).toEqual(account);\n\n      // WHEN\n      authenticationState.next(null);\n\n      // THEN\n      expect(comp.account).toBeNull();\n    });\n  });\n\n  describe('login', () => {\n    it('Should navigate to /login on login', () => {\n      // WHEN\n      comp.login();\n\n      // THEN\n      expect(mockRouter.navigate).toHaveBeenCalledWith(['/login']);\n    });\n  });\n\n  describe('ngOnDestroy', () => {\n    it('Should destroy authentication state subscription on component destroy', () => {\n      // GIVEN\n      const authenticationState = new Subject<Account | null>();\n      mockAccountService.getAuthenticationState = jest.fn(() => authenticationState.asObservable());\n\n      // WHEN\n      comp.ngOnInit();\n\n      // THEN\n      expect(comp.account).toBeNull();\n\n      // WHEN\n      authenticationState.next(account);\n\n      // THEN\n      expect(comp.account).toEqual(account);\n\n      // WHEN\n      comp.ngOnDestroy();\n      authenticationState.next(null);\n\n      // THEN\n      expect(comp.account).toEqual(account);\n    });\n  });\n});\n"],"version":3}