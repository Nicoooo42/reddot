659f2f94dac865139cc77f48608b80f8
"use strict";

/* istanbul ignore next */
function cov_2o3efe6xdg() {
  var path = "C:\\Users\\Nicolas\\Desktop\\test6\\gateway\\src\\main\\webapp\\app\\shared\\alert\\alert-error.component.ts";
  var hash = "5fa95a2901c809d068d1eaa95fc14621f5a6042f";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\Nicolas\\Desktop\\test6\\gateway\\src\\main\\webapp\\app\\shared\\alert\\alert-error.component.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 37
        }
      },
      "2": {
        start: {
          line: 4,
          column: 16
        },
        end: {
          line: 4,
          column: 32
        }
      },
      "3": {
        start: {
          line: 5,
          column: 15
        },
        end: {
          line: 5,
          column: 39
        }
      },
      "4": {
        start: {
          line: 6,
          column: 15
        },
        end: {
          line: 6,
          column: 45
        }
      },
      "5": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 7,
          column: 62
        }
      },
      "6": {
        start: {
          line: 8,
          column: 32
        },
        end: {
          line: 8,
          column: 78
        }
      },
      "7": {
        start: {
          line: 9,
          column: 26
        },
        end: {
          line: 93,
          column: 1
        }
      },
      "8": {
        start: {
          line: 11,
          column: 8
        },
        end: {
          line: 11,
          column: 41
        }
      },
      "9": {
        start: {
          line: 12,
          column: 8
        },
        end: {
          line: 12,
          column: 41
        }
      },
      "10": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 25
        }
      },
      "11": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 17,
          column: 11
        }
      },
      "12": {
        start: {
          line: 15,
          column: 34
        },
        end: {
          line: 15,
          column: 50
        }
      },
      "13": {
        start: {
          line: 16,
          column: 12
        },
        end: {
          line: 16,
          column: 95
        }
      },
      "14": {
        start: {
          line: 18,
          column: 8
        },
        end: {
          line: 73,
          column: 11
        }
      },
      "15": {
        start: {
          line: 20,
          column: 38
        },
        end: {
          line: 20,
          column: 54
        }
      },
      "16": {
        start: {
          line: 21,
          column: 12
        },
        end: {
          line: 72,
          column: 13
        }
      },
      "17": {
        start: {
          line: 24,
          column: 20
        },
        end: {
          line: 24,
          column: 93
        }
      },
      "18": {
        start: {
          line: 25,
          column: 20
        },
        end: {
          line: 25,
          column: 26
        }
      },
      "19": {
        start: {
          line: 27,
          column: 32
        },
        end: {
          line: 27,
          column: 64
        }
      },
      "20": {
        start: {
          line: 28,
          column: 38
        },
        end: {
          line: 28,
          column: 42
        }
      },
      "21": {
        start: {
          line: 29,
          column: 36
        },
        end: {
          line: 29,
          column: 40
        }
      },
      "22": {
        start: {
          line: 30,
          column: 20
        },
        end: {
          line: 37,
          column: 21
        }
      },
      "23": {
        start: {
          line: 31,
          column: 24
        },
        end: {
          line: 36,
          column: 25
        }
      },
      "24": {
        start: {
          line: 32,
          column: 28
        },
        end: {
          line: 32,
          column: 79
        }
      },
      "25": {
        start: {
          line: 34,
          column: 29
        },
        end: {
          line: 36,
          column: 25
        }
      },
      "26": {
        start: {
          line: 35,
          column: 28
        },
        end: {
          line: 35,
          column: 77
        }
      },
      "27": {
        start: {
          line: 38,
          column: 20
        },
        end: {
          line: 59,
          column: 21
        }
      },
      "28": {
        start: {
          line: 39,
          column: 42
        },
        end: {
          line: 39,
          column: 143
        }
      },
      "29": {
        start: {
          line: 40,
          column: 24
        },
        end: {
          line: 40,
          column: 80
        }
      },
      "30": {
        start: {
          line: 42,
          column: 25
        },
        end: {
          line: 59,
          column: 21
        }
      },
      "31": {
        start: {
          line: 43,
          column: 44
        },
        end: {
          line: 43,
          column: 79
        }
      },
      "32": {
        start: {
          line: 44,
          column: 24
        },
        end: {
          line: 52,
          column: 25
        }
      },
      "33": {
        start: {
          line: 45,
          column: 28
        },
        end: {
          line: 47,
          column: 29
        }
      },
      "34": {
        start: {
          line: 46,
          column: 32
        },
        end: {
          line: 46,
          column: 60
        }
      },
      "35": {
        start: {
          line: 49,
          column: 51
        },
        end: {
          line: 49,
          column: 93
        }
      },
      "36": {
        start: {
          line: 50,
          column: 46
        },
        end: {
          line: 50,
          column: 127
        }
      },
      "37": {
        start: {
          line: 51,
          column: 28
        },
        end: {
          line: 51,
          column: 126
        }
      },
      "38": {
        start: {
          line: 54,
          column: 25
        },
        end: {
          line: 59,
          column: 21
        }
      },
      "39": {
        start: {
          line: 55,
          column: 24
        },
        end: {
          line: 55,
          column: 212
        }
      },
      "40": {
        start: {
          line: 58,
          column: 24
        },
        end: {
          line: 58,
          column: 93
        }
      },
      "41": {
        start: {
          line: 60,
          column: 20
        },
        end: {
          line: 60,
          column: 26
        }
      },
      "42": {
        start: {
          line: 63,
          column: 20
        },
        end: {
          line: 63,
          column: 75
        }
      },
      "43": {
        start: {
          line: 64,
          column: 20
        },
        end: {
          line: 64,
          column: 26
        }
      },
      "44": {
        start: {
          line: 66,
          column: 20
        },
        end: {
          line: 71,
          column: 21
        }
      },
      "45": {
        start: {
          line: 67,
          column: 24
        },
        end: {
          line: 67,
          column: 212
        }
      },
      "46": {
        start: {
          line: 70,
          column: 24
        },
        end: {
          line: 70,
          column: 93
        }
      },
      "47": {
        start: {
          line: 76,
          column: 24
        },
        end: {
          line: 76,
          column: 61
        }
      },
      "48": {
        start: {
          line: 77,
          column: 8
        },
        end: {
          line: 79,
          column: 9
        }
      },
      "49": {
        start: {
          line: 78,
          column: 12
        },
        end: {
          line: 78,
          column: 89
        }
      },
      "50": {
        start: {
          line: 80,
          column: 8
        },
        end: {
          line: 80,
          column: 23
        }
      },
      "51": {
        start: {
          line: 83,
          column: 8
        },
        end: {
          line: 83,
          column: 54
        }
      },
      "52": {
        start: {
          line: 84,
          column: 8
        },
        end: {
          line: 84,
          column: 58
        }
      },
      "53": {
        start: {
          line: 88,
          column: 8
        },
        end: {
          line: 88,
          column: 92
        }
      },
      "54": {
        start: {
          line: 91,
          column: 8
        },
        end: {
          line: 91,
          column: 112
        }
      },
      "55": {
        start: {
          line: 94,
          column: 0
        },
        end: {
          line: 98,
          column: 2
        }
      },
      "56": {
        start: {
          line: 94,
          column: 43
        },
        end: {
          line: 98,
          column: 1
        }
      },
      "57": {
        start: {
          line: 99,
          column: 0
        },
        end: {
          line: 105,
          column: 24
        }
      },
      "58": {
        start: {
          line: 106,
          column: 0
        },
        end: {
          line: 106,
          column: 50
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 10,
            column: 4
          },
          end: {
            line: 10,
            column: 5
          }
        },
        loc: {
          start: {
            line: 10,
            column: 62
          },
          end: {
            line: 74,
            column: 5
          }
        },
        line: 10
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 14,
            column: 72
          },
          end: {
            line: 14,
            column: 73
          }
        },
        loc: {
          start: {
            line: 14,
            column: 86
          },
          end: {
            line: 17,
            column: 9
          }
        },
        line: 14
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 18,
            column: 80
          },
          end: {
            line: 18,
            column: 81
          }
        },
        loc: {
          start: {
            line: 18,
            column: 94
          },
          end: {
            line: 73,
            column: 9
          }
        },
        line: 18
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 75,
            column: 4
          },
          end: {
            line: 75,
            column: 5
          }
        },
        loc: {
          start: {
            line: 75,
            column: 22
          },
          end: {
            line: 81,
            column: 5
          }
        },
        line: 75
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 82,
            column: 4
          },
          end: {
            line: 82,
            column: 5
          }
        },
        loc: {
          start: {
            line: 82,
            column: 18
          },
          end: {
            line: 85,
            column: 5
          }
        },
        line: 82
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 86,
            column: 4
          },
          end: {
            line: 86,
            column: 5
          }
        },
        loc: {
          start: {
            line: 86,
            column: 17
          },
          end: {
            line: 89,
            column: 5
          }
        },
        line: 86
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 90,
            column: 4
          },
          end: {
            line: 90,
            column: 5
          }
        },
        loc: {
          start: {
            line: 90,
            column: 62
          },
          end: {
            line: 92,
            column: 5
          }
        },
        line: 90
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 94,
            column: 37
          },
          end: {
            line: 94,
            column: 38
          }
        },
        loc: {
          start: {
            line: 94,
            column: 43
          },
          end: {
            line: 98,
            column: 1
          }
        },
        line: 94
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 21,
            column: 12
          },
          end: {
            line: 72,
            column: 13
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 23,
            column: 16
          },
          end: {
            line: 25,
            column: 26
          }
        }, {
          start: {
            line: 26,
            column: 16
          },
          end: {
            line: 61,
            column: 17
          }
        }, {
          start: {
            line: 62,
            column: 16
          },
          end: {
            line: 64,
            column: 26
          }
        }, {
          start: {
            line: 65,
            column: 16
          },
          end: {
            line: 71,
            column: 21
          }
        }],
        line: 21
      },
      "1": {
        loc: {
          start: {
            line: 31,
            column: 24
          },
          end: {
            line: 36,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 31,
            column: 24
          },
          end: {
            line: 36,
            column: 25
          }
        }, {
          start: {
            line: 34,
            column: 29
          },
          end: {
            line: 36,
            column: 25
          }
        }],
        line: 31
      },
      "2": {
        loc: {
          start: {
            line: 34,
            column: 29
          },
          end: {
            line: 36,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 34,
            column: 29
          },
          end: {
            line: 36,
            column: 25
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 34
      },
      "3": {
        loc: {
          start: {
            line: 38,
            column: 20
          },
          end: {
            line: 59,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 38,
            column: 20
          },
          end: {
            line: 59,
            column: 21
          }
        }, {
          start: {
            line: 42,
            column: 25
          },
          end: {
            line: 59,
            column: 21
          }
        }],
        line: 38
      },
      "4": {
        loc: {
          start: {
            line: 39,
            column: 42
          },
          end: {
            line: 39,
            column: 143
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 39,
            column: 54
          },
          end: {
            line: 39,
            column: 131
          }
        }, {
          start: {
            line: 39,
            column: 134
          },
          end: {
            line: 39,
            column: 143
          }
        }],
        line: 39
      },
      "5": {
        loc: {
          start: {
            line: 42,
            column: 25
          },
          end: {
            line: 59,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 42,
            column: 25
          },
          end: {
            line: 59,
            column: 21
          }
        }, {
          start: {
            line: 54,
            column: 25
          },
          end: {
            line: 59,
            column: 21
          }
        }],
        line: 42
      },
      "6": {
        loc: {
          start: {
            line: 42,
            column: 29
          },
          end: {
            line: 42,
            column: 98
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 42,
            column: 29
          },
          end: {
            line: 42,
            column: 59
          }
        }, {
          start: {
            line: 42,
            column: 63
          },
          end: {
            line: 42,
            column: 98
          }
        }],
        line: 42
      },
      "7": {
        loc: {
          start: {
            line: 45,
            column: 28
          },
          end: {
            line: 47,
            column: 29
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 45,
            column: 28
          },
          end: {
            line: 47,
            column: 29
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 45
      },
      "8": {
        loc: {
          start: {
            line: 54,
            column: 25
          },
          end: {
            line: 59,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 54,
            column: 25
          },
          end: {
            line: 59,
            column: 21
          }
        }, {
          start: {
            line: 57,
            column: 25
          },
          end: {
            line: 59,
            column: 21
          }
        }],
        line: 54
      },
      "9": {
        loc: {
          start: {
            line: 54,
            column: 29
          },
          end: {
            line: 54,
            column: 94
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 54,
            column: 29
          },
          end: {
            line: 54,
            column: 59
          }
        }, {
          start: {
            line: 54,
            column: 63
          },
          end: {
            line: 54,
            column: 94
          }
        }],
        line: 54
      },
      "10": {
        loc: {
          start: {
            line: 55,
            column: 43
          },
          end: {
            line: 55,
            column: 145
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 55,
            column: 109
          },
          end: {
            line: 55,
            column: 111
          }
        }, {
          start: {
            line: 55,
            column: 114
          },
          end: {
            line: 55,
            column: 145
          }
        }],
        line: 55
      },
      "11": {
        loc: {
          start: {
            line: 55,
            column: 43
          },
          end: {
            line: 55,
            column: 106
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 55,
            column: 43
          },
          end: {
            line: 55,
            column: 89
          }
        }, {
          start: {
            line: 55,
            column: 93
          },
          end: {
            line: 55,
            column: 106
          }
        }],
        line: 55
      },
      "12": {
        loc: {
          start: {
            line: 66,
            column: 20
          },
          end: {
            line: 71,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 66,
            column: 20
          },
          end: {
            line: 71,
            column: 21
          }
        }, {
          start: {
            line: 69,
            column: 25
          },
          end: {
            line: 71,
            column: 21
          }
        }],
        line: 66
      },
      "13": {
        loc: {
          start: {
            line: 66,
            column: 24
          },
          end: {
            line: 66,
            column: 89
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 66,
            column: 24
          },
          end: {
            line: 66,
            column: 54
          }
        }, {
          start: {
            line: 66,
            column: 58
          },
          end: {
            line: 66,
            column: 89
          }
        }],
        line: 66
      },
      "14": {
        loc: {
          start: {
            line: 67,
            column: 43
          },
          end: {
            line: 67,
            column: 145
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 67,
            column: 109
          },
          end: {
            line: 67,
            column: 111
          }
        }, {
          start: {
            line: 67,
            column: 114
          },
          end: {
            line: 67,
            column: 145
          }
        }],
        line: 67
      },
      "15": {
        loc: {
          start: {
            line: 67,
            column: 43
          },
          end: {
            line: 67,
            column: 106
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 67,
            column: 43
          },
          end: {
            line: 67,
            column: 89
          }
        }, {
          start: {
            line: 67,
            column: 93
          },
          end: {
            line: 67,
            column: 106
          }
        }],
        line: 67
      },
      "16": {
        loc: {
          start: {
            line: 77,
            column: 8
          },
          end: {
            line: 79,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 77,
            column: 8
          },
          end: {
            line: 79,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 77
      },
      "17": {
        loc: {
          start: {
            line: 88,
            column: 8
          },
          end: {
            line: 88,
            column: 91
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 88,
            column: 55
          },
          end: {
            line: 88,
            column: 61
          }
        }, {
          start: {
            line: 88,
            column: 64
          },
          end: {
            line: 88,
            column: 91
          }
        }],
        line: 88
      },
      "18": {
        loc: {
          start: {
            line: 88,
            column: 8
          },
          end: {
            line: 88,
            column: 52
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 88,
            column: 8
          },
          end: {
            line: 88,
            column: 35
          }
        }, {
          start: {
            line: 88,
            column: 39
          },
          end: {
            line: 88,
            column: 52
          }
        }],
        line: 88
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0
    },
    b: {
      "0": [0, 0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0]
    },
    inputSourceMap: {
      file: "C:\\Users\\Nicolas\\Desktop\\test6\\gateway\\src\\main\\webapp\\app\\shared\\alert\\alert-error.component.ts",
      mappings: "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",
      names: [],
      sources: ["C:\\Users\\Nicolas\\Desktop\\test6\\gateway\\src\\main\\webapp\\app\\shared\\alert\\alert-error.component.ts"],
      sourcesContent: ["import { Component, OnDestroy } from '@angular/core';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { Subscription } from 'rxjs';\nimport { TranslateService } from '@ngx-translate/core';\n\nimport { AlertError } from './alert-error.model';\nimport { Alert, AlertService } from 'app/core/util/alert.service';\nimport { EventManager, EventWithContent } from 'app/core/util/event-manager.service';\n\n@Component({\n  selector: 'jhi-alert-error',\n  templateUrl: './alert-error.component.html',\n})\nexport class AlertErrorComponent implements OnDestroy {\n  alerts: Alert[] = [];\n  errorListener: Subscription;\n  httpErrorListener: Subscription;\n\n  constructor(private alertService: AlertService, private eventManager: EventManager, translateService: TranslateService) {\n    this.errorListener = eventManager.subscribe('gatewayApp.error', (response: EventWithContent<unknown> | string) => {\n      const errorResponse = (response as EventWithContent<AlertError>).content;\n      this.addErrorAlert(errorResponse.message, errorResponse.key, errorResponse.params);\n    });\n\n    this.httpErrorListener = eventManager.subscribe('gatewayApp.httpError', (response: EventWithContent<unknown> | string) => {\n      const httpErrorResponse = (response as EventWithContent<HttpErrorResponse>).content;\n      switch (httpErrorResponse.status) {\n        // connection refused, server not reachable\n        case 0:\n          this.addErrorAlert('Server not reachable', 'error.server.not.reachable');\n          break;\n\n        case 400: {\n          const arr = httpErrorResponse.headers.keys();\n          let errorHeader: string | null = null;\n          let entityKey: string | null = null;\n          for (const entry of arr) {\n            if (entry.toLowerCase().endsWith('app-error')) {\n              errorHeader = httpErrorResponse.headers.get(entry);\n            } else if (entry.toLowerCase().endsWith('app-params')) {\n              entityKey = httpErrorResponse.headers.get(entry);\n            }\n          }\n          if (errorHeader) {\n            const alertData = entityKey ? { entityName: translateService.instant(`global.menu.entities.${entityKey}`) } : undefined;\n            this.addErrorAlert(errorHeader, errorHeader, alertData);\n          } else if (httpErrorResponse.error !== '' && httpErrorResponse.error.fieldErrors) {\n            const fieldErrors = httpErrorResponse.error.fieldErrors;\n            for (const fieldError of fieldErrors) {\n              if (['Min', 'Max', 'DecimalMin', 'DecimalMax'].includes(fieldError.message)) {\n                fieldError.message = 'Size';\n              }\n              // convert 'something[14].other[4].id' to 'something[].other[].id' so translations can be written to it\n              const convertedField: string = fieldError.field.replace(/\\[\\d*\\]/g, '[]');\n              const fieldName: string = translateService.instant(`gatewayApp.${fieldError.objectName as string}.${convertedField}`);\n              this.addErrorAlert(`Error on field \"${fieldName}\"`, `error.${fieldError.message as string}`, { fieldName });\n            }\n          } else if (httpErrorResponse.error !== '' && httpErrorResponse.error.message) {\n            this.addErrorAlert(\n              httpErrorResponse.error.detail ?? httpErrorResponse.error.message,\n              httpErrorResponse.error.message,\n              httpErrorResponse.error.params\n            );\n          } else {\n            this.addErrorAlert(httpErrorResponse.error, httpErrorResponse.error);\n          }\n          break;\n        }\n\n        case 404:\n          this.addErrorAlert('Not found', 'error.url.not.found');\n          break;\n\n        default:\n          if (httpErrorResponse.error !== '' && httpErrorResponse.error.message) {\n            this.addErrorAlert(\n              httpErrorResponse.error.detail ?? httpErrorResponse.error.message,\n              httpErrorResponse.error.message,\n              httpErrorResponse.error.params\n            );\n          } else {\n            this.addErrorAlert(httpErrorResponse.error, httpErrorResponse.error);\n          }\n      }\n    });\n  }\n\n  setClasses(alert: Alert): { [key: string]: boolean } {\n    const classes = { 'jhi-toast': Boolean(alert.toast) };\n    if (alert.position) {\n      return { ...classes, [alert.position]: true };\n    }\n    return classes;\n  }\n\n  ngOnDestroy(): void {\n    this.eventManager.destroy(this.errorListener);\n    this.eventManager.destroy(this.httpErrorListener);\n  }\n\n  close(alert: Alert): void {\n    alert.close?.(this.alerts);\n  }\n\n  private addErrorAlert(message?: string, translationKey?: string, translationParams?: { [key: string]: unknown }): void {\n    this.alertService.addAlert({ type: 'danger', message, translationKey, translationParams }, this.alerts);\n  }\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "5fa95a2901c809d068d1eaa95fc14621f5a6042f"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2o3efe6xdg = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}

cov_2o3efe6xdg();
cov_2o3efe6xdg().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});

/* istanbul ignore next */
cov_2o3efe6xdg().s[1]++;
exports.AlertErrorComponent = void 0;
const tslib_1 =
/* istanbul ignore next */
(cov_2o3efe6xdg().s[2]++, require("tslib"));
const core_1 =
/* istanbul ignore next */
(cov_2o3efe6xdg().s[3]++, require("@angular/core"));
const core_2 =
/* istanbul ignore next */
(cov_2o3efe6xdg().s[4]++, require("@ngx-translate/core"));
const alert_service_1 =
/* istanbul ignore next */
(cov_2o3efe6xdg().s[5]++, require("app/core/util/alert.service"));
const event_manager_service_1 =
/* istanbul ignore next */
(cov_2o3efe6xdg().s[6]++, require("app/core/util/event-manager.service"));

/* istanbul ignore next */
cov_2o3efe6xdg().s[7]++;
let AlertErrorComponent = class AlertErrorComponent {
  constructor(alertService, eventManager, translateService) {
    /* istanbul ignore next */
    cov_2o3efe6xdg().f[0]++;
    cov_2o3efe6xdg().s[8]++;
    this.alertService = alertService;

    /* istanbul ignore next */
    cov_2o3efe6xdg().s[9]++;
    this.eventManager = eventManager;

    /* istanbul ignore next */
    cov_2o3efe6xdg().s[10]++;
    this.alerts = [];

    /* istanbul ignore next */
    cov_2o3efe6xdg().s[11]++;
    this.errorListener = eventManager.subscribe('gatewayApp.error', (response) => {
      /* istanbul ignore next */
      cov_2o3efe6xdg().f[1]++;
      const errorResponse =
      /* istanbul ignore next */
      (cov_2o3efe6xdg().s[12]++, response.content);

      /* istanbul ignore next */
      cov_2o3efe6xdg().s[13]++;
      this.addErrorAlert(errorResponse.message, errorResponse.key, errorResponse.params);
    });

    /* istanbul ignore next */
    cov_2o3efe6xdg().s[14]++;
    this.httpErrorListener = eventManager.subscribe('gatewayApp.httpError', (response) => {
      /* istanbul ignore next */
      cov_2o3efe6xdg().f[2]++;

      var _a, _b;

      const httpErrorResponse =
      /* istanbul ignore next */
      (cov_2o3efe6xdg().s[15]++, response.content);

      /* istanbul ignore next */
      cov_2o3efe6xdg().s[16]++;

      switch (httpErrorResponse.status) {
        // connection refused, server not reachable
        case 0:
          /* istanbul ignore next */
          cov_2o3efe6xdg().b[0][0]++;
          cov_2o3efe6xdg().s[17]++;
          this.addErrorAlert('Server not reachable', 'error.server.not.reachable');

          /* istanbul ignore next */
          cov_2o3efe6xdg().s[18]++;
          break;

        case 400:
          /* istanbul ignore next */
          cov_2o3efe6xdg().b[0][1]++;
          {
            const arr =
            /* istanbul ignore next */
            (cov_2o3efe6xdg().s[19]++, httpErrorResponse.headers.keys());
            let errorHeader =
            /* istanbul ignore next */
            (cov_2o3efe6xdg().s[20]++, null);
            let entityKey =
            /* istanbul ignore next */
            (cov_2o3efe6xdg().s[21]++, null);

            /* istanbul ignore next */
            cov_2o3efe6xdg().s[22]++;

            for (const entry of arr) {
              /* istanbul ignore next */
              cov_2o3efe6xdg().s[23]++;

              if (entry.toLowerCase().endsWith('app-error')) {
                /* istanbul ignore next */
                cov_2o3efe6xdg().b[1][0]++;
                cov_2o3efe6xdg().s[24]++;
                errorHeader = httpErrorResponse.headers.get(entry);
              } else {
                /* istanbul ignore next */
                cov_2o3efe6xdg().b[1][1]++;
                cov_2o3efe6xdg().s[25]++;

                if (entry.toLowerCase().endsWith('app-params')) {
                  /* istanbul ignore next */
                  cov_2o3efe6xdg().b[2][0]++;
                  cov_2o3efe6xdg().s[26]++;
                  entityKey = httpErrorResponse.headers.get(entry);
                } else
                /* istanbul ignore next */
                {
                  cov_2o3efe6xdg().b[2][1]++;
                }
              }
            }

            /* istanbul ignore next */
            cov_2o3efe6xdg().s[27]++;

            if (errorHeader) {
              /* istanbul ignore next */
              cov_2o3efe6xdg().b[3][0]++;
              const alertData =
              /* istanbul ignore next */
              (cov_2o3efe6xdg().s[28]++, entityKey ?
              /* istanbul ignore next */
              (cov_2o3efe6xdg().b[4][0]++, {
                entityName: translateService.instant(`global.menu.entities.${entityKey}`)
              }) :
              /* istanbul ignore next */
              (cov_2o3efe6xdg().b[4][1]++, undefined));

              /* istanbul ignore next */
              cov_2o3efe6xdg().s[29]++;
              this.addErrorAlert(errorHeader, errorHeader, alertData);
            } else {
              /* istanbul ignore next */
              cov_2o3efe6xdg().b[3][1]++;
              cov_2o3efe6xdg().s[30]++;

              if (
              /* istanbul ignore next */
              (cov_2o3efe6xdg().b[6][0]++, httpErrorResponse.error !== '') &&
              /* istanbul ignore next */
              (cov_2o3efe6xdg().b[6][1]++, httpErrorResponse.error.fieldErrors)) {
                /* istanbul ignore next */
                cov_2o3efe6xdg().b[5][0]++;
                const fieldErrors =
                /* istanbul ignore next */
                (cov_2o3efe6xdg().s[31]++, httpErrorResponse.error.fieldErrors);

                /* istanbul ignore next */
                cov_2o3efe6xdg().s[32]++;

                for (const fieldError of fieldErrors) {
                  /* istanbul ignore next */
                  cov_2o3efe6xdg().s[33]++;

                  if (['Min', 'Max', 'DecimalMin', 'DecimalMax'].includes(fieldError.message)) {
                    /* istanbul ignore next */
                    cov_2o3efe6xdg().b[7][0]++;
                    cov_2o3efe6xdg().s[34]++;
                    fieldError.message = 'Size';
                  } else
                  /* istanbul ignore next */
                  {
                    cov_2o3efe6xdg().b[7][1]++;
                  } // convert 'something[14].other[4].id' to 'something[].other[].id' so translations can be written to it


                  const convertedField =
                  /* istanbul ignore next */
                  (cov_2o3efe6xdg().s[35]++, fieldError.field.replace(/\[\d*\]/g, '[]'));
                  const fieldName =
                  /* istanbul ignore next */
                  (cov_2o3efe6xdg().s[36]++, translateService.instant(`gatewayApp.${fieldError.objectName}.${convertedField}`));

                  /* istanbul ignore next */
                  cov_2o3efe6xdg().s[37]++;
                  this.addErrorAlert(`Error on field "${fieldName}"`, `error.${fieldError.message}`, {
                    fieldName
                  });
                }
              } else {
                /* istanbul ignore next */
                cov_2o3efe6xdg().b[5][1]++;
                cov_2o3efe6xdg().s[38]++;

                if (
                /* istanbul ignore next */
                (cov_2o3efe6xdg().b[9][0]++, httpErrorResponse.error !== '') &&
                /* istanbul ignore next */
                (cov_2o3efe6xdg().b[9][1]++, httpErrorResponse.error.message)) {
                  /* istanbul ignore next */
                  cov_2o3efe6xdg().b[8][0]++;
                  cov_2o3efe6xdg().s[39]++;
                  this.addErrorAlert(
                  /* istanbul ignore next */
                  (cov_2o3efe6xdg().b[11][0]++, (_a = httpErrorResponse.error.detail) !== null) &&
                  /* istanbul ignore next */
                  (cov_2o3efe6xdg().b[11][1]++, _a !== void 0) ?
                  /* istanbul ignore next */
                  (cov_2o3efe6xdg().b[10][0]++, _a) :
                  /* istanbul ignore next */
                  (cov_2o3efe6xdg().b[10][1]++, httpErrorResponse.error.message), httpErrorResponse.error.message, httpErrorResponse.error.params);
                } else {
                  /* istanbul ignore next */
                  cov_2o3efe6xdg().b[8][1]++;
                  cov_2o3efe6xdg().s[40]++;
                  this.addErrorAlert(httpErrorResponse.error, httpErrorResponse.error);
                }
              }
            }

            /* istanbul ignore next */
            cov_2o3efe6xdg().s[41]++;
            break;
          }

        case 404:
          /* istanbul ignore next */
          cov_2o3efe6xdg().b[0][2]++;
          cov_2o3efe6xdg().s[42]++;
          this.addErrorAlert('Not found', 'error.url.not.found');

          /* istanbul ignore next */
          cov_2o3efe6xdg().s[43]++;
          break;

        default:
          /* istanbul ignore next */
          cov_2o3efe6xdg().b[0][3]++;
          cov_2o3efe6xdg().s[44]++;

          if (
          /* istanbul ignore next */
          (cov_2o3efe6xdg().b[13][0]++, httpErrorResponse.error !== '') &&
          /* istanbul ignore next */
          (cov_2o3efe6xdg().b[13][1]++, httpErrorResponse.error.message)) {
            /* istanbul ignore next */
            cov_2o3efe6xdg().b[12][0]++;
            cov_2o3efe6xdg().s[45]++;
            this.addErrorAlert(
            /* istanbul ignore next */
            (cov_2o3efe6xdg().b[15][0]++, (_b = httpErrorResponse.error.detail) !== null) &&
            /* istanbul ignore next */
            (cov_2o3efe6xdg().b[15][1]++, _b !== void 0) ?
            /* istanbul ignore next */
            (cov_2o3efe6xdg().b[14][0]++, _b) :
            /* istanbul ignore next */
            (cov_2o3efe6xdg().b[14][1]++, httpErrorResponse.error.message), httpErrorResponse.error.message, httpErrorResponse.error.params);
          } else {
            /* istanbul ignore next */
            cov_2o3efe6xdg().b[12][1]++;
            cov_2o3efe6xdg().s[46]++;
            this.addErrorAlert(httpErrorResponse.error, httpErrorResponse.error);
          }

      }
    });
  }

  setClasses(alert) {
    /* istanbul ignore next */
    cov_2o3efe6xdg().f[3]++;
    const classes =
    /* istanbul ignore next */
    (cov_2o3efe6xdg().s[47]++, {
      'jhi-toast': Boolean(alert.toast)
    });

    /* istanbul ignore next */
    cov_2o3efe6xdg().s[48]++;

    if (alert.position) {
      /* istanbul ignore next */
      cov_2o3efe6xdg().b[16][0]++;
      cov_2o3efe6xdg().s[49]++;
      return Object.assign(Object.assign({}, classes), {
        [alert.position]: true
      });
    } else
    /* istanbul ignore next */
    {
      cov_2o3efe6xdg().b[16][1]++;
    }

    cov_2o3efe6xdg().s[50]++;
    return classes;
  }

  ngOnDestroy() {
    /* istanbul ignore next */
    cov_2o3efe6xdg().f[4]++;
    cov_2o3efe6xdg().s[51]++;
    this.eventManager.destroy(this.errorListener);

    /* istanbul ignore next */
    cov_2o3efe6xdg().s[52]++;
    this.eventManager.destroy(this.httpErrorListener);
  }

  close(alert) {
    /* istanbul ignore next */
    cov_2o3efe6xdg().f[5]++;

    var _a;

    /* istanbul ignore next */
    cov_2o3efe6xdg().s[53]++;

    /* istanbul ignore next */
    (cov_2o3efe6xdg().b[18][0]++, (_a = alert.close) === null) ||
    /* istanbul ignore next */
    (cov_2o3efe6xdg().b[18][1]++, _a === void 0) ?
    /* istanbul ignore next */
    (cov_2o3efe6xdg().b[17][0]++, void 0) :
    /* istanbul ignore next */
    (cov_2o3efe6xdg().b[17][1]++, _a.call(alert, this.alerts));
  }

  addErrorAlert(message, translationKey, translationParams) {
    /* istanbul ignore next */
    cov_2o3efe6xdg().f[6]++;
    cov_2o3efe6xdg().s[54]++;
    this.alertService.addAlert({
      type: 'danger',
      message,
      translationKey,
      translationParams
    }, this.alerts);
  }

};

/* istanbul ignore next */
cov_2o3efe6xdg().s[55]++;

AlertErrorComponent.ctorParameters = () => {
  /* istanbul ignore next */
  cov_2o3efe6xdg().f[7]++;
  cov_2o3efe6xdg().s[56]++;
  return [{
    type: alert_service_1.AlertService
  }, {
    type: event_manager_service_1.EventManager
  }, {
    type: core_2.TranslateService
  }];
};

/* istanbul ignore next */
cov_2o3efe6xdg().s[57]++;
AlertErrorComponent = tslib_1.__decorate([core_1.Component({
  selector: 'jhi-alert-error',
  template: require("./alert-error.component.html")
}), tslib_1.__metadata("design:paramtypes", [alert_service_1.AlertService, event_manager_service_1.EventManager, core_2.TranslateService])], AlertErrorComponent);

/* istanbul ignore next */
cov_2o3efe6xdg().s[58]++;
exports.AlertErrorComponent = AlertErrorComponent;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,