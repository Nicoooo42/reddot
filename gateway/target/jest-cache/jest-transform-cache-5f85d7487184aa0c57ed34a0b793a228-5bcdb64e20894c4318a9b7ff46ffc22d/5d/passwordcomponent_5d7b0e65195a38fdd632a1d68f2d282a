19cc1c903e4b384051a4c3674c4976f1
"use strict";

/* istanbul ignore next */
function cov_1lwc8fqug9() {
  var path = "C:\\Users\\Nicolas\\Desktop\\test6\\gateway\\src\\main\\webapp\\app\\account\\password\\password.component.ts";
  var hash = "c195418bdef5cae4502fb9d160db5a3b5885d75b";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\Nicolas\\Desktop\\test6\\gateway\\src\\main\\webapp\\app\\account\\password\\password.component.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 35
        }
      },
      "2": {
        start: {
          line: 4,
          column: 16
        },
        end: {
          line: 4,
          column: 32
        }
      },
      "3": {
        start: {
          line: 5,
          column: 15
        },
        end: {
          line: 5,
          column: 39
        }
      },
      "4": {
        start: {
          line: 6,
          column: 16
        },
        end: {
          line: 6,
          column: 41
        }
      },
      "5": {
        start: {
          line: 7,
          column: 26
        },
        end: {
          line: 7,
          column: 66
        }
      },
      "6": {
        start: {
          line: 8,
          column: 27
        },
        end: {
          line: 8,
          column: 56
        }
      },
      "7": {
        start: {
          line: 9,
          column: 24
        },
        end: {
          line: 38,
          column: 1
        }
      },
      "8": {
        start: {
          line: 11,
          column: 8
        },
        end: {
          line: 11,
          column: 47
        }
      },
      "9": {
        start: {
          line: 12,
          column: 8
        },
        end: {
          line: 12,
          column: 45
        }
      },
      "10": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 21
        }
      },
      "11": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 32
        }
      },
      "12": {
        start: {
          line: 15,
          column: 8
        },
        end: {
          line: 15,
          column: 27
        }
      },
      "13": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 29
        }
      },
      "14": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 21,
          column: 11
        }
      },
      "15": {
        start: {
          line: 24,
          column: 8
        },
        end: {
          line: 24,
          column: 55
        }
      },
      "16": {
        start: {
          line: 27,
          column: 8
        },
        end: {
          line: 27,
          column: 27
        }
      },
      "17": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 28,
          column: 29
        }
      },
      "18": {
        start: {
          line: 29,
          column: 8
        },
        end: {
          line: 29,
          column: 32
        }
      },
      "19": {
        start: {
          line: 30,
          column: 28
        },
        end: {
          line: 30,
          column: 72
        }
      },
      "20": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 36,
          column: 9
        }
      },
      "21": {
        start: {
          line: 32,
          column: 12
        },
        end: {
          line: 32,
          column: 35
        }
      },
      "22": {
        start: {
          line: 35,
          column: 12
        },
        end: {
          line: 35,
          column: 167
        }
      },
      "23": {
        start: {
          line: 35,
          column: 118
        },
        end: {
          line: 35,
          column: 137
        }
      },
      "24": {
        start: {
          line: 35,
          column: 147
        },
        end: {
          line: 35,
          column: 164
        }
      },
      "25": {
        start: {
          line: 39,
          column: 0
        },
        end: {
          line: 43,
          column: 2
        }
      },
      "26": {
        start: {
          line: 39,
          column: 41
        },
        end: {
          line: 43,
          column: 1
        }
      },
      "27": {
        start: {
          line: 44,
          column: 0
        },
        end: {
          line: 50,
          column: 22
        }
      },
      "28": {
        start: {
          line: 51,
          column: 0
        },
        end: {
          line: 51,
          column: 46
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 10,
            column: 4
          },
          end: {
            line: 10,
            column: 5
          }
        },
        loc: {
          start: {
            line: 10,
            column: 53
          },
          end: {
            line: 22,
            column: 5
          }
        },
        line: 10
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 23,
            column: 4
          },
          end: {
            line: 23,
            column: 5
          }
        },
        loc: {
          start: {
            line: 23,
            column: 15
          },
          end: {
            line: 25,
            column: 5
          }
        },
        line: 23
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 26,
            column: 4
          },
          end: {
            line: 26,
            column: 5
          }
        },
        loc: {
          start: {
            line: 26,
            column: 21
          },
          end: {
            line: 37,
            column: 5
          }
        },
        line: 26
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 35,
            column: 111
          },
          end: {
            line: 35,
            column: 112
          }
        },
        loc: {
          start: {
            line: 35,
            column: 118
          },
          end: {
            line: 35,
            column: 137
          }
        },
        line: 35
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 35,
            column: 140
          },
          end: {
            line: 35,
            column: 141
          }
        },
        loc: {
          start: {
            line: 35,
            column: 147
          },
          end: {
            line: 35,
            column: 164
          }
        },
        line: 35
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 39,
            column: 35
          },
          end: {
            line: 39,
            column: 36
          }
        },
        loc: {
          start: {
            line: 39,
            column: 41
          },
          end: {
            line: 43,
            column: 1
          }
        },
        line: 39
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 31,
            column: 8
          },
          end: {
            line: 36,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 31,
            column: 8
          },
          end: {
            line: 36,
            column: 9
          }
        }, {
          start: {
            line: 34,
            column: 13
          },
          end: {
            line: 36,
            column: 9
          }
        }],
        line: 31
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0
    },
    b: {
      "0": [0, 0]
    },
    inputSourceMap: {
      file: "C:\\Users\\Nicolas\\Desktop\\test6\\gateway\\src\\main\\webapp\\app\\account\\password\\password.component.ts",
      mappings: ";;;;AAAA,wCAAkD;AAClD,0CAAyD;AAGzD,mEAA+D;AAE/D,yDAAqD;IAMxC,iBAAiB,SAAjB,iBAAiB;IAW5B,YAAoB,eAAgC,EAAU,cAA8B,EAAU,EAAe;QAAjG,oBAAe,GAAf,eAAe,CAAiB;QAAU,mBAAc,GAAd,cAAc,CAAgB;QAAU,OAAE,GAAF,EAAE,CAAa;QAVrH,eAAU,GAAG,KAAK,CAAC;QACnB,UAAK,GAAG,KAAK,CAAC;QACd,YAAO,GAAG,KAAK,CAAC;QAEhB,iBAAY,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC3B,eAAe,EAAE,CAAC,EAAE,EAAE,CAAC,kBAAU,CAAC,QAAQ,CAAC,CAAC;YAC5C,WAAW,EAAE,CAAC,EAAE,EAAE,CAAC,kBAAU,CAAC,QAAQ,EAAE,kBAAU,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,kBAAU,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;YAC3F,eAAe,EAAE,CAAC,EAAE,EAAE,CAAC,kBAAU,CAAC,QAAQ,EAAE,kBAAU,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,kBAAU,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;SAChG,CAAC,CAAC;IAEqH,CAAC;IAEzH,QAAQ;QACN,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,cAAc,CAAC,QAAQ,EAAE,CAAC;IACjD,CAAC;IAED,cAAc;QACZ,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACrB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QAExB,MAAM,WAAW,GAAG,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,aAAa,CAAC,CAAE,CAAC,KAAK,CAAC;QAClE,IAAI,WAAW,KAAK,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,iBAAiB,CAAC,CAAE,CAAC,KAAK,EAAE;YACrE,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;SACxB;aAAM;YACL,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,iBAAiB,CAAC,CAAE,CAAC,KAAK,CAAC,CAAC,SAAS,CACjG,GAAG,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,EAC3B,GAAG,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,CAC1B,CAAC;SACH;IACH,CAAC;CACF,CAAA;;YAtCQ,kCAAe;YAFf,gCAAc;YAHd,mBAAW;;AAWP,iBAAiB;IAJ7B,gBAAS,CAAC;QACT,QAAQ,EAAE,cAAc;QACxB,8CAAwC;KACzC,CAAC;6CAYqC,kCAAe,EAA0B,gCAAc,EAAc,mBAAW;GAX1G,iBAAiB,CAgC7B;AAhCY,8CAAiB",
      names: [],
      sources: ["C:\\Users\\Nicolas\\Desktop\\test6\\gateway\\src\\main\\webapp\\app\\account\\password\\password.component.ts"],
      sourcesContent: ["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { Observable } from 'rxjs';\n\nimport { AccountService } from 'app/core/auth/account.service';\nimport { Account } from 'app/core/auth/account.model';\nimport { PasswordService } from './password.service';\n\n@Component({\n  selector: 'jhi-password',\n  templateUrl: './password.component.html',\n})\nexport class PasswordComponent implements OnInit {\n  doNotMatch = false;\n  error = false;\n  success = false;\n  account$?: Observable<Account | null>;\n  passwordForm = this.fb.group({\n    currentPassword: ['', [Validators.required]],\n    newPassword: ['', [Validators.required, Validators.minLength(4), Validators.maxLength(50)]],\n    confirmPassword: ['', [Validators.required, Validators.minLength(4), Validators.maxLength(50)]],\n  });\n\n  constructor(private passwordService: PasswordService, private accountService: AccountService, private fb: FormBuilder) {}\n\n  ngOnInit(): void {\n    this.account$ = this.accountService.identity();\n  }\n\n  changePassword(): void {\n    this.error = false;\n    this.success = false;\n    this.doNotMatch = false;\n\n    const newPassword = this.passwordForm.get(['newPassword'])!.value;\n    if (newPassword !== this.passwordForm.get(['confirmPassword'])!.value) {\n      this.doNotMatch = true;\n    } else {\n      this.passwordService.save(newPassword, this.passwordForm.get(['currentPassword'])!.value).subscribe(\n        () => (this.success = true),\n        () => (this.error = true)\n      );\n    }\n  }\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "c195418bdef5cae4502fb9d160db5a3b5885d75b"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1lwc8fqug9 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}

cov_1lwc8fqug9();
cov_1lwc8fqug9().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});

/* istanbul ignore next */
cov_1lwc8fqug9().s[1]++;
exports.PasswordComponent = void 0;
const tslib_1 =
/* istanbul ignore next */
(cov_1lwc8fqug9().s[2]++, require("tslib"));
const core_1 =
/* istanbul ignore next */
(cov_1lwc8fqug9().s[3]++, require("@angular/core"));
const forms_1 =
/* istanbul ignore next */
(cov_1lwc8fqug9().s[4]++, require("@angular/forms"));
const account_service_1 =
/* istanbul ignore next */
(cov_1lwc8fqug9().s[5]++, require("app/core/auth/account.service"));
const password_service_1 =
/* istanbul ignore next */
(cov_1lwc8fqug9().s[6]++, require("./password.service"));

/* istanbul ignore next */
cov_1lwc8fqug9().s[7]++;
let PasswordComponent = class PasswordComponent {
  constructor(passwordService, accountService, fb) {
    /* istanbul ignore next */
    cov_1lwc8fqug9().f[0]++;
    cov_1lwc8fqug9().s[8]++;
    this.passwordService = passwordService;

    /* istanbul ignore next */
    cov_1lwc8fqug9().s[9]++;
    this.accountService = accountService;

    /* istanbul ignore next */
    cov_1lwc8fqug9().s[10]++;
    this.fb = fb;

    /* istanbul ignore next */
    cov_1lwc8fqug9().s[11]++;
    this.doNotMatch = false;

    /* istanbul ignore next */
    cov_1lwc8fqug9().s[12]++;
    this.error = false;

    /* istanbul ignore next */
    cov_1lwc8fqug9().s[13]++;
    this.success = false;

    /* istanbul ignore next */
    cov_1lwc8fqug9().s[14]++;
    this.passwordForm = this.fb.group({
      currentPassword: ['', [forms_1.Validators.required]],
      newPassword: ['', [forms_1.Validators.required, forms_1.Validators.minLength(4), forms_1.Validators.maxLength(50)]],
      confirmPassword: ['', [forms_1.Validators.required, forms_1.Validators.minLength(4), forms_1.Validators.maxLength(50)]]
    });
  }

  ngOnInit() {
    /* istanbul ignore next */
    cov_1lwc8fqug9().f[1]++;
    cov_1lwc8fqug9().s[15]++;
    this.account$ = this.accountService.identity();
  }

  changePassword() {
    /* istanbul ignore next */
    cov_1lwc8fqug9().f[2]++;
    cov_1lwc8fqug9().s[16]++;
    this.error = false;

    /* istanbul ignore next */
    cov_1lwc8fqug9().s[17]++;
    this.success = false;

    /* istanbul ignore next */
    cov_1lwc8fqug9().s[18]++;
    this.doNotMatch = false;
    const newPassword =
    /* istanbul ignore next */
    (cov_1lwc8fqug9().s[19]++, this.passwordForm.get(['newPassword']).value);

    /* istanbul ignore next */
    cov_1lwc8fqug9().s[20]++;

    if (newPassword !== this.passwordForm.get(['confirmPassword']).value) {
      /* istanbul ignore next */
      cov_1lwc8fqug9().b[0][0]++;
      cov_1lwc8fqug9().s[21]++;
      this.doNotMatch = true;
    } else {
      /* istanbul ignore next */
      cov_1lwc8fqug9().b[0][1]++;
      cov_1lwc8fqug9().s[22]++;
      this.passwordService.save(newPassword, this.passwordForm.get(['currentPassword']).value).subscribe(() => {
        /* istanbul ignore next */
        cov_1lwc8fqug9().f[3]++;
        cov_1lwc8fqug9().s[23]++;
        return this.success = true;
      }, () => {
        /* istanbul ignore next */
        cov_1lwc8fqug9().f[4]++;
        cov_1lwc8fqug9().s[24]++;
        return this.error = true;
      });
    }
  }

};

/* istanbul ignore next */
cov_1lwc8fqug9().s[25]++;

PasswordComponent.ctorParameters = () => {
  /* istanbul ignore next */
  cov_1lwc8fqug9().f[5]++;
  cov_1lwc8fqug9().s[26]++;
  return [{
    type: password_service_1.PasswordService
  }, {
    type: account_service_1.AccountService
  }, {
    type: forms_1.FormBuilder
  }];
};

/* istanbul ignore next */
cov_1lwc8fqug9().s[27]++;
PasswordComponent = tslib_1.__decorate([core_1.Component({
  selector: 'jhi-password',
  template: require("./password.component.html")
}), tslib_1.__metadata("design:paramtypes", [password_service_1.PasswordService, account_service_1.AccountService, forms_1.FormBuilder])], PasswordComponent);

/* istanbul ignore next */
cov_1lwc8fqug9().s[28]++;
exports.PasswordComponent = PasswordComponent;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcTmljb2xhc1xcRGVza3RvcFxcdGVzdDZcXGdhdGV3YXlcXHNyY1xcbWFpblxcd2ViYXBwXFxhcHBcXGFjY291bnRcXHBhc3N3b3JkXFxwYXNzd29yZC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQWVFOzs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQWZGLE1BQUEsTUFBQTtBQUFBO0FBQUEsMEJBQUEsT0FBQSxDQUFBLGVBQUEsQ0FBQSxDQUFBO0FBQ0EsTUFBQSxPQUFBO0FBQUE7QUFBQSwwQkFBQSxPQUFBLENBQUEsZ0JBQUEsQ0FBQSxDQUFBO0FBR0EsTUFBQSxpQkFBQTtBQUFBO0FBQUEsMEJBQUEsT0FBQSxDQUFBLCtCQUFBLENBQUEsQ0FBQTtB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QUFBLENBQUEsMkJBQUE7QUFGUyxDQUFWLENBSTZCLEUseUNBV1Msa0JBQUEsQ0FBQSxlLEVBQXlDLGlCQUFBLENBQUEsYyxFQUE0QixPQUFBLENBQUEsVyxFQVg5RSxDQUFBLEVBQWpCLGlCQUFpQixDQUFqQjs7OztBQUFBLE9BQUEsQ0FBQSxpQkFBQSxHQUFBLGlCQUFBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBPbkluaXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEZvcm1CdWlsZGVyLCBWYWxpZGF0b3JzIH0gZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xuaW1wb3J0IHsgT2JzZXJ2YWJsZSB9IGZyb20gJ3J4anMnO1xuXG5pbXBvcnQgeyBBY2NvdW50U2VydmljZSB9IGZyb20gJ2FwcC9jb3JlL2F1dGgvYWNjb3VudC5zZXJ2aWNlJztcbmltcG9ydCB7IEFjY291bnQgfSBmcm9tICdhcHAvY29yZS9hdXRoL2FjY291bnQubW9kZWwnO1xuaW1wb3J0IHsgUGFzc3dvcmRTZXJ2aWNlIH0gZnJvbSAnLi9wYXNzd29yZC5zZXJ2aWNlJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnamhpLXBhc3N3b3JkJyxcbiAgdGVtcGxhdGVVcmw6ICcuL3Bhc3N3b3JkLmNvbXBvbmVudC5odG1sJyxcbn0pXG5leHBvcnQgY2xhc3MgUGFzc3dvcmRDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xuICBkb05vdE1hdGNoID0gZmFsc2U7XG4gIGVycm9yID0gZmFsc2U7XG4gIHN1Y2Nlc3MgPSBmYWxzZTtcbiAgYWNjb3VudCQ/OiBPYnNlcnZhYmxlPEFjY291bnQgfCBudWxsPjtcbiAgcGFzc3dvcmRGb3JtID0gdGhpcy5mYi5ncm91cCh7XG4gICAgY3VycmVudFBhc3N3b3JkOiBbJycsIFtWYWxpZGF0b3JzLnJlcXVpcmVkXV0sXG4gICAgbmV3UGFzc3dvcmQ6IFsnJywgW1ZhbGlkYXRvcnMucmVxdWlyZWQsIFZhbGlkYXRvcnMubWluTGVuZ3RoKDQpLCBWYWxpZGF0b3JzLm1heExlbmd0aCg1MCldXSxcbiAgICBjb25maXJtUGFzc3dvcmQ6IFsnJywgW1ZhbGlkYXRvcnMucmVxdWlyZWQsIFZhbGlkYXRvcnMubWluTGVuZ3RoKDQpLCBWYWxpZGF0b3JzLm1heExlbmd0aCg1MCldXSxcbiAgfSk7XG5cbiAgY29uc3RydWN0b3IocHJpdmF0ZSBwYXNzd29yZFNlcnZpY2U6IFBhc3N3b3JkU2VydmljZSwgcHJpdmF0ZSBhY2NvdW50U2VydmljZTogQWNjb3VudFNlcnZpY2UsIHByaXZhdGUgZmI6IEZvcm1CdWlsZGVyKSB7fVxuXG4gIG5nT25Jbml0KCk6IHZvaWQge1xuICAgIHRoaXMuYWNjb3VudCQgPSB0aGlzLmFjY291bnRTZXJ2aWNlLmlkZW50aXR5KCk7XG4gIH1cblxuICBjaGFuZ2VQYXNzd29yZCgpOiB2b2lkIHtcbiAgICB0aGlzLmVycm9yID0gZmFsc2U7XG4gICAgdGhpcy5zdWNjZXNzID0gZmFsc2U7XG4gICAgdGhpcy5kb05vdE1hdGNoID0gZmFsc2U7XG5cbiAgICBjb25zdCBuZXdQYXNzd29yZCA9IHRoaXMucGFzc3dvcmRGb3JtLmdldChbJ25ld1Bhc3N3b3JkJ10pIS52YWx1ZTtcbiAgICBpZiAobmV3UGFzc3dvcmQgIT09IHRoaXMucGFzc3dvcmRGb3JtLmdldChbJ2NvbmZpcm1QYXNzd29yZCddKSEudmFsdWUpIHtcbiAgICAgIHRoaXMuZG9Ob3RNYXRjaCA9IHRydWU7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMucGFzc3dvcmRTZXJ2aWNlLnNhdmUobmV3UGFzc3dvcmQsIHRoaXMucGFzc3dvcmRGb3JtLmdldChbJ2N1cnJlbnRQYXNzd29yZCddKSEudmFsdWUpLnN1YnNjcmliZShcbiAgICAgICAgKCkgPT4gKHRoaXMuc3VjY2VzcyA9IHRydWUpLFxuICAgICAgICAoKSA9PiAodGhpcy5lcnJvciA9IHRydWUpXG4gICAgICApO1xuICAgIH1cbiAgfVxufVxuIl19