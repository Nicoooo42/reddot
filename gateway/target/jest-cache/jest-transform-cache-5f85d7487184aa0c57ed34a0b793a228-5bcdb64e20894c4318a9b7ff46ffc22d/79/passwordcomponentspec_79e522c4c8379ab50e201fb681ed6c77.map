{"file":"C:\\Users\\Nicolas\\Desktop\\test6\\gateway\\src\\main\\webapp\\app\\account\\password\\password.component.spec.ts","mappings":";;AAAA,IAAI,CAAC,IAAI,CAAC,+BAA+B,CAAC,CAAC;AAE3C,mDAAgF;AAChF,+CAAoD;AACpD,0DAAuE;AACvE,0CAA6C;AAC7C,+BAAsC;AAEtC,mEAA+D;AAE/D,6DAAyD;AACzD,yDAAqD;AAErD,QAAQ,CAAC,mBAAmB,EAAE,GAAG,EAAE;IACjC,IAAI,IAAuB,CAAC;IAC5B,IAAI,OAA4C,CAAC;IACjD,IAAI,OAAwB,CAAC;IAE7B,UAAU,CACR,sBAAY,CAAC,GAAG,EAAE;QAChB,iBAAO,CAAC,sBAAsB,CAAC;YAC7B,OAAO,EAAE,CAAC,iCAAuB,CAAC;YAClC,YAAY,EAAE,CAAC,sCAAiB,CAAC;YACjC,SAAS,EAAE,CAAC,mBAAW,EAAE,gCAAc,CAAC;SACzC,CAAC;aACC,gBAAgB,CAAC,sCAAiB,EAAE,EAAE,CAAC;aACvC,iBAAiB,EAAE,CAAC;IACzB,CAAC,CAAC,CACH,CAAC;IAEF,UAAU,CAAC,GAAG,EAAE;QACd,OAAO,GAAG,iBAAO,CAAC,eAAe,CAAC,sCAAiB,CAAC,CAAC;QACrD,IAAI,GAAG,OAAO,CAAC,iBAAiB,CAAC;QACjC,OAAO,GAAG,iBAAO,CAAC,MAAM,CAAC,kCAAe,CAAC,CAAC;IAC5C,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,6CAA6C,EAAE,GAAG,EAAE;QACrD,QAAQ;QACR,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC;YAC3B,WAAW,EAAE,WAAW;YACxB,eAAe,EAAE,WAAW;SAC7B,CAAC,CAAC;QACH,OAAO;QACP,IAAI,CAAC,cAAc,EAAE,CAAC;QACtB,OAAO;QACP,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACnC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC/B,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACnC,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,sDAAsD,EAAE,GAAG,EAAE;QAC9D,QAAQ;QACR,MAAM,cAAc,GAAG;YACrB,eAAe,EAAE,aAAa;YAC9B,WAAW,EAAE,YAAY;SAC1B,CAAC;QAEF,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC,eAAe,CAAC,SAAE,CAAC,IAAI,mBAAY,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC;QAElF,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC;YAC3B,eAAe,EAAE,cAAc,CAAC,eAAe;YAC/C,WAAW,EAAE,cAAc,CAAC,WAAW;YACvC,eAAe,EAAE,cAAc,CAAC,WAAW;SAC5C,CAAC,CAAC;QAEH,OAAO;QACP,IAAI,CAAC,cAAc,EAAE,CAAC;QAEtB,OAAO;QACP,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,oBAAoB,CAAC,cAAc,CAAC,WAAW,EAAE,cAAc,CAAC,eAAe,CAAC,CAAC;IACxG,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,yCAAyC,EAAE,GAAG,EAAE;QACjD,QAAQ;QACR,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC,eAAe,CAAC,SAAE,CAAC,IAAI,mBAAY,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC;QAClF,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC;YAC3B,WAAW,EAAE,YAAY;YACzB,eAAe,EAAE,YAAY;SAC9B,CAAC,CAAC;QAEH,OAAO;QACP,IAAI,CAAC,cAAc,EAAE,CAAC;QAEtB,OAAO;QACP,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACpC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC/B,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAClC,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,iDAAiD,EAAE,GAAG,EAAE;QACzD,QAAQ;QACR,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC,eAAe,CAAC,iBAAU,CAAC,OAAO,CAAC,CAAC,CAAC;QACjE,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC;YAC3B,WAAW,EAAE,YAAY;YACzB,eAAe,EAAE,YAAY;SAC9B,CAAC,CAAC;QAEH,OAAO;QACP,IAAI,CAAC,cAAc,EAAE,CAAC;QAEtB,OAAO;QACP,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACpC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACjC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAChC,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","names":[],"sources":["C:\\Users\\Nicolas\\Desktop\\test6\\gateway\\src\\main\\webapp\\app\\account\\password\\password.component.spec.ts"],"sourcesContent":["jest.mock('app/core/auth/account.service');\n\nimport { ComponentFixture, TestBed, waitForAsync } from '@angular/core/testing';\nimport { HttpResponse } from '@angular/common/http';\nimport { HttpClientTestingModule } from '@angular/common/http/testing';\nimport { FormBuilder } from '@angular/forms';\nimport { of, throwError } from 'rxjs';\n\nimport { AccountService } from 'app/core/auth/account.service';\n\nimport { PasswordComponent } from './password.component';\nimport { PasswordService } from './password.service';\n\ndescribe('PasswordComponent', () => {\n  let comp: PasswordComponent;\n  let fixture: ComponentFixture<PasswordComponent>;\n  let service: PasswordService;\n\n  beforeEach(\n    waitForAsync(() => {\n      TestBed.configureTestingModule({\n        imports: [HttpClientTestingModule],\n        declarations: [PasswordComponent],\n        providers: [FormBuilder, AccountService],\n      })\n        .overrideTemplate(PasswordComponent, '')\n        .compileComponents();\n    })\n  );\n\n  beforeEach(() => {\n    fixture = TestBed.createComponent(PasswordComponent);\n    comp = fixture.componentInstance;\n    service = TestBed.inject(PasswordService);\n  });\n\n  it('should show error if passwords do not match', () => {\n    // GIVEN\n    comp.passwordForm.patchValue({\n      newPassword: 'password1',\n      confirmPassword: 'password2',\n    });\n    // WHEN\n    comp.changePassword();\n    // THEN\n    expect(comp.doNotMatch).toBe(true);\n    expect(comp.error).toBe(false);\n    expect(comp.success).toBe(false);\n  });\n\n  it('should call Auth.changePassword when passwords match', () => {\n    // GIVEN\n    const passwordValues = {\n      currentPassword: 'oldPassword',\n      newPassword: 'myPassword',\n    };\n\n    jest.spyOn(service, 'save').mockReturnValue(of(new HttpResponse({ body: true })));\n\n    comp.passwordForm.patchValue({\n      currentPassword: passwordValues.currentPassword,\n      newPassword: passwordValues.newPassword,\n      confirmPassword: passwordValues.newPassword,\n    });\n\n    // WHEN\n    comp.changePassword();\n\n    // THEN\n    expect(service.save).toHaveBeenCalledWith(passwordValues.newPassword, passwordValues.currentPassword);\n  });\n\n  it('should set success to true upon success', () => {\n    // GIVEN\n    jest.spyOn(service, 'save').mockReturnValue(of(new HttpResponse({ body: true })));\n    comp.passwordForm.patchValue({\n      newPassword: 'myPassword',\n      confirmPassword: 'myPassword',\n    });\n\n    // WHEN\n    comp.changePassword();\n\n    // THEN\n    expect(comp.doNotMatch).toBe(false);\n    expect(comp.error).toBe(false);\n    expect(comp.success).toBe(true);\n  });\n\n  it('should notify of error if change password fails', () => {\n    // GIVEN\n    jest.spyOn(service, 'save').mockReturnValue(throwError('ERROR'));\n    comp.passwordForm.patchValue({\n      newPassword: 'myPassword',\n      confirmPassword: 'myPassword',\n    });\n\n    // WHEN\n    comp.changePassword();\n\n    // THEN\n    expect(comp.doNotMatch).toBe(false);\n    expect(comp.success).toBe(false);\n    expect(comp.error).toBe(true);\n  });\n});\n"],"version":3}