{"file":"C:\\Users\\Nicolas\\Desktop\\test6\\gateway\\src\\main\\webapp\\app\\layouts\\navbar\\navbar.component.spec.ts","mappings":"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","names":[],"sources":["C:\\Users\\Nicolas\\Desktop\\test6\\gateway\\src\\main\\webapp\\app\\layouts\\navbar\\navbar.component.spec.ts"],"sourcesContent":["jest.mock('@angular/router');\njest.mock('app/login/login.service');\n\nimport { ComponentFixture, TestBed, waitForAsync } from '@angular/core/testing';\nimport { HttpClientTestingModule } from '@angular/common/http/testing';\nimport { Router } from '@angular/router';\nimport { of } from 'rxjs';\nimport { NgxWebstorageModule } from 'ngx-webstorage';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { ProfileInfo } from 'app/layouts/profiles/profile-info.model';\nimport { Account } from 'app/core/auth/account.model';\nimport { AccountService } from 'app/core/auth/account.service';\nimport { ProfileService } from 'app/layouts/profiles/profile.service';\nimport { LoginService } from 'app/login/login.service';\n\nimport { NavbarComponent } from './navbar.component';\n\ndescribe('Navbar Component', () => {\n  let comp: NavbarComponent;\n  let fixture: ComponentFixture<NavbarComponent>;\n  let accountService: AccountService;\n  let profileService: ProfileService;\n  const account: Account = {\n    activated: true,\n    authorities: [],\n    email: '',\n    firstName: 'John',\n    langKey: '',\n    lastName: 'Doe',\n    login: 'john.doe',\n    imageUrl: '',\n  };\n\n  beforeEach(\n    waitForAsync(() => {\n      TestBed.configureTestingModule({\n        imports: [HttpClientTestingModule, NgxWebstorageModule.forRoot(), TranslateModule.forRoot()],\n        declarations: [NavbarComponent],\n        providers: [Router, LoginService],\n      })\n        .overrideTemplate(NavbarComponent, '')\n        .compileComponents();\n    })\n  );\n\n  beforeEach(() => {\n    fixture = TestBed.createComponent(NavbarComponent);\n    comp = fixture.componentInstance;\n    accountService = TestBed.inject(AccountService);\n    profileService = TestBed.inject(ProfileService);\n  });\n\n  it('Should call profileService.getProfileInfo on init', () => {\n    // GIVEN\n    jest.spyOn(profileService, 'getProfileInfo').mockReturnValue(of(new ProfileInfo()));\n\n    // WHEN\n    comp.ngOnInit();\n\n    // THEN\n    expect(profileService.getProfileInfo).toHaveBeenCalled();\n  });\n\n  it('Should hold current authenticated user in variable account', () => {\n    // WHEN\n    comp.ngOnInit();\n\n    // THEN\n    expect(comp.account).toBeNull();\n\n    // WHEN\n    accountService.authenticate(account);\n\n    // THEN\n    expect(comp.account).toEqual(account);\n\n    // WHEN\n    accountService.authenticate(null);\n\n    // THEN\n    expect(comp.account).toBeNull();\n  });\n\n  it('Should hold current authenticated user in variable account if user is authenticated before page load', () => {\n    // GIVEN\n    accountService.authenticate(account);\n\n    // WHEN\n    comp.ngOnInit();\n\n    // THEN\n    expect(comp.account).toEqual(account);\n\n    // WHEN\n    accountService.authenticate(null);\n\n    // THEN\n    expect(comp.account).toBeNull();\n  });\n});\n"],"version":3}