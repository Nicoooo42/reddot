{"file":"C:\\Users\\Nicolas\\Desktop\\test6\\gateway\\src\\main\\webapp\\app\\shared\\sort\\sort-by.directive.spec.ts","mappings":"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","names":[],"sources":["C:\\Users\\Nicolas\\Desktop\\test6\\gateway\\src\\main\\webapp\\app\\shared\\sort\\sort-by.directive.spec.ts"],"sourcesContent":["import { Component, DebugElement } from '@angular/core';\nimport { ComponentFixture, TestBed } from '@angular/core/testing';\nimport { By } from '@angular/platform-browser';\nimport { FaIconComponent, FaIconLibrary } from '@fortawesome/angular-fontawesome';\nimport { fas, faSort, faSortDown, faSortUp } from '@fortawesome/free-solid-svg-icons';\n\nimport { SortByDirective } from './sort-by.directive';\nimport { SortDirective } from './sort.directive';\n\n@Component({\n  template: `\n    <table>\n      <thead>\n        <tr jhiSort [(predicate)]=\"predicate\" [(ascending)]=\"ascending\" (sortChange)=\"transition($event)\">\n          <th jhiSortBy=\"name\">ID<fa-icon *ngIf=\"sortAllowed\" [icon]=\"'sort'\"></fa-icon></th>\n        </tr>\n      </thead>\n    </table>\n  `,\n})\nclass TestSortByDirectiveComponent {\n  predicate?: string;\n  ascending?: boolean;\n  sortAllowed = true;\n  transition = jest.fn();\n\n  constructor(library: FaIconLibrary) {\n    library.addIconPacks(fas);\n    library.addIcons(faSort, faSortDown, faSortUp);\n  }\n}\n\ndescribe('Directive: SortByDirective', () => {\n  let component: TestSortByDirectiveComponent;\n  let fixture: ComponentFixture<TestSortByDirectiveComponent>;\n  let tableHead: DebugElement;\n\n  beforeEach(() => {\n    TestBed.configureTestingModule({\n      declarations: [TestSortByDirectiveComponent, SortDirective, SortByDirective, FaIconComponent],\n    });\n    fixture = TestBed.createComponent(TestSortByDirectiveComponent);\n    component = fixture.componentInstance;\n    tableHead = fixture.debugElement.query(By.directive(SortByDirective));\n  });\n\n  it('should initialize predicate, order, icon when initial component predicate differs from column predicate', () => {\n    // GIVEN\n    component.predicate = 'id';\n    const sortByDirective = tableHead.injector.get(SortByDirective);\n\n    // WHEN\n    fixture.detectChanges();\n\n    // THEN\n    expect(sortByDirective.jhiSortBy).toEqual('name');\n    expect(component.predicate).toEqual('id');\n    expect(sortByDirective.iconComponent?.icon).toEqual('sort');\n    expect(component.transition).toHaveBeenCalledTimes(0);\n  });\n\n  it('should initialize predicate, order, icon when initial component predicate is same as column predicate', () => {\n    // GIVEN\n    component.predicate = 'name';\n    component.ascending = true;\n    const sortByDirective = tableHead.injector.get(SortByDirective);\n\n    // WHEN\n    fixture.detectChanges();\n\n    // THEN\n    expect(sortByDirective.jhiSortBy).toEqual('name');\n    expect(component.predicate).toEqual('name');\n    expect(component.ascending).toEqual(true);\n    expect(sortByDirective.iconComponent?.icon).toEqual(faSortUp.iconName);\n    expect(component.transition).toHaveBeenCalledTimes(0);\n  });\n\n  it('should update component predicate, order, icon when user clicks on column header', () => {\n    // GIVEN\n    component.predicate = 'name';\n    component.ascending = true;\n    const sortByDirective = tableHead.injector.get(SortByDirective);\n\n    // WHEN\n    fixture.detectChanges();\n    tableHead.triggerEventHandler('click', null);\n    fixture.detectChanges();\n\n    // THEN\n    expect(component.predicate).toEqual('name');\n    expect(component.ascending).toEqual(false);\n    expect(sortByDirective.iconComponent?.icon).toEqual(faSortDown.iconName);\n    expect(component.transition).toHaveBeenCalledTimes(1);\n    expect(component.transition).toHaveBeenCalledWith({ predicate: 'name', ascending: false });\n  });\n\n  it('should update component predicate, order, icon when user double clicks on column header', () => {\n    // GIVEN\n    component.predicate = 'name';\n    component.ascending = true;\n    const sortByDirective = tableHead.injector.get(SortByDirective);\n\n    // WHEN\n    fixture.detectChanges();\n\n    tableHead.triggerEventHandler('click', null);\n    fixture.detectChanges();\n\n    tableHead.triggerEventHandler('click', null);\n    fixture.detectChanges();\n\n    // THEN\n    expect(component.predicate).toEqual('name');\n    expect(component.ascending).toEqual(true);\n    expect(sortByDirective.iconComponent?.icon).toEqual(faSortUp.iconName);\n    expect(component.transition).toHaveBeenCalledTimes(2);\n    expect(component.transition).toHaveBeenNthCalledWith(1, { predicate: 'name', ascending: false });\n    expect(component.transition).toHaveBeenNthCalledWith(2, { predicate: 'name', ascending: true });\n  });\n\n  it('should not run sorting on click if sorting icon is hidden', () => {\n    // GIVEN\n    component.predicate = 'id';\n    component.ascending = false;\n    component.sortAllowed = false;\n\n    // WHEN\n    fixture.detectChanges();\n\n    tableHead.triggerEventHandler('click', null);\n    fixture.detectChanges();\n\n    // THEN\n    expect(component.predicate).toEqual('id');\n    expect(component.ascending).toEqual(false);\n    expect(component.transition).not.toHaveBeenCalled();\n  });\n});\n"],"version":3}