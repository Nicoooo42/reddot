{"file":"C:\\Users\\Nicolas\\Desktop\\test6\\gateway\\src\\main\\webapp\\app\\account\\password-reset\\init\\password-reset-init.component.spec.ts","mappings":";;AAAA,wCAA2C;AAC3C,mDAA0E;AAC1E,0DAAuE;AACvE,0CAA6C;AAC7C,+BAAsC;AAEtC,mFAA6E;AAC7E,+EAAyE;AAEzE,QAAQ,CAAC,4BAA4B,EAAE,GAAG,EAAE;IAC1C,IAAI,OAAqD,CAAC;IAC1D,IAAI,IAAgC,CAAC;IAErC,UAAU,CAAC,GAAG,EAAE;QACd,OAAO,GAAG,iBAAO,CAAC,sBAAsB,CAAC;YACvC,OAAO,EAAE,CAAC,iCAAuB,CAAC;YAClC,YAAY,EAAE,CAAC,0DAA0B,CAAC;YAC1C,SAAS,EAAE,CAAC,mBAAW,CAAC;SACzB,CAAC;aACC,gBAAgB,CAAC,0DAA0B,EAAE,EAAE,CAAC;aAChD,eAAe,CAAC,0DAA0B,CAAC,CAAC;QAC/C,IAAI,GAAG,OAAO,CAAC,iBAAiB,CAAC;IACnC,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,gDAAgD,EAAE,GAAG,EAAE;QACxD,MAAM,IAAI,GAAG;YACX,KAAK,EAAE,IAAI,CAAC,EAAE,EAAE;SACjB,CAAC;QACF,IAAI,CAAC,KAAK,GAAG,IAAI,iBAAU,CAAC,IAAI,CAAC,CAAC;QAElC,IAAI,CAAC,eAAe,EAAE,CAAC;QAEvB,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,gBAAgB,EAAE,CAAC;IACxC,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,kDAAkD,EAAE,gBAAM,CAAC,CAAC,sDAAwB,CAAC,EAAE,CAAC,OAAiC,EAAE,EAAE;QAC9H,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC,eAAe,CAAC,SAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QACpD,IAAI,CAAC,gBAAgB,CAAC,UAAU,CAAC;YAC/B,KAAK,EAAE,iBAAiB;SACzB,CAAC,CAAC;QAEH,IAAI,CAAC,YAAY,EAAE,CAAC;QAEpB,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,oBAAoB,CAAC,iBAAiB,CAAC,CAAC;QAC7D,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAClC,CAAC,CAAC,CAAC,CAAC;IAEJ,EAAE,CAAC,gDAAgD,EAAE,gBAAM,CAAC,CAAC,sDAAwB,CAAC,EAAE,CAAC,OAAiC,EAAE,EAAE;QAC5H,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC,eAAe,CACzC,iBAAU,CAAC;YACT,MAAM,EAAE,GAAG;YACX,IAAI,EAAE,gBAAgB;SACvB,CAAC,CACH,CAAC;QACF,IAAI,CAAC,gBAAgB,CAAC,UAAU,CAAC;YAC/B,KAAK,EAAE,iBAAiB;SACzB,CAAC,CAAC;QACH,IAAI,CAAC,YAAY,EAAE,CAAC;QAEpB,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,oBAAoB,CAAC,iBAAiB,CAAC,CAAC;QAC7D,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACnC,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,CAAC,CAAC","names":[],"sources":["C:\\Users\\Nicolas\\Desktop\\test6\\gateway\\src\\main\\webapp\\app\\account\\password-reset\\init\\password-reset-init.component.spec.ts"],"sourcesContent":["import { ElementRef } from '@angular/core';\nimport { ComponentFixture, TestBed, inject } from '@angular/core/testing';\nimport { HttpClientTestingModule } from '@angular/common/http/testing';\nimport { FormBuilder } from '@angular/forms';\nimport { of, throwError } from 'rxjs';\n\nimport { PasswordResetInitComponent } from './password-reset-init.component';\nimport { PasswordResetInitService } from './password-reset-init.service';\n\ndescribe('PasswordResetInitComponent', () => {\n  let fixture: ComponentFixture<PasswordResetInitComponent>;\n  let comp: PasswordResetInitComponent;\n\n  beforeEach(() => {\n    fixture = TestBed.configureTestingModule({\n      imports: [HttpClientTestingModule],\n      declarations: [PasswordResetInitComponent],\n      providers: [FormBuilder],\n    })\n      .overrideTemplate(PasswordResetInitComponent, '')\n      .createComponent(PasswordResetInitComponent);\n    comp = fixture.componentInstance;\n  });\n\n  it('sets focus after the view has been initialized', () => {\n    const node = {\n      focus: jest.fn(),\n    };\n    comp.email = new ElementRef(node);\n\n    comp.ngAfterViewInit();\n\n    expect(node.focus).toHaveBeenCalled();\n  });\n\n  it('notifies of success upon successful requestReset', inject([PasswordResetInitService], (service: PasswordResetInitService) => {\n    jest.spyOn(service, 'save').mockReturnValue(of({}));\n    comp.resetRequestForm.patchValue({\n      email: 'user@domain.com',\n    });\n\n    comp.requestReset();\n\n    expect(service.save).toHaveBeenCalledWith('user@domain.com');\n    expect(comp.success).toBe(true);\n  }));\n\n  it('no notification of success upon error response', inject([PasswordResetInitService], (service: PasswordResetInitService) => {\n    jest.spyOn(service, 'save').mockReturnValue(\n      throwError({\n        status: 503,\n        data: 'something else',\n      })\n    );\n    comp.resetRequestForm.patchValue({\n      email: 'user@domain.com',\n    });\n    comp.requestReset();\n\n    expect(service.save).toHaveBeenCalledWith('user@domain.com');\n    expect(comp.success).toBe(false);\n  }));\n});\n"],"version":3}