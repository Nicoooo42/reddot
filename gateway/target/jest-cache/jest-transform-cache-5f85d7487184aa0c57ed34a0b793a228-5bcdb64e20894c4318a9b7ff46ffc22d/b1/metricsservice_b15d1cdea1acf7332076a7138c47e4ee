3e173a60ca2c3607275d53aa6042871f
"use strict";

/* istanbul ignore next */
function cov_1eifsj13qr() {
  var path = "C:\\Users\\Nicolas\\Desktop\\test6\\gateway\\src\\main\\webapp\\app\\admin\\metrics\\metrics.service.ts";
  var hash = "fd6f4023f979736c7bc949471586e84d085cea85";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\Nicolas\\Desktop\\test6\\gateway\\src\\main\\webapp\\app\\admin\\metrics\\metrics.service.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 32
        }
      },
      "2": {
        start: {
          line: 4,
          column: 16
        },
        end: {
          line: 4,
          column: 32
        }
      },
      "3": {
        start: {
          line: 5,
          column: 15
        },
        end: {
          line: 5,
          column: 39
        }
      },
      "4": {
        start: {
          line: 6,
          column: 15
        },
        end: {
          line: 6,
          column: 46
        }
      },
      "5": {
        start: {
          line: 7,
          column: 37
        },
        end: {
          line: 7,
          column: 90
        }
      },
      "6": {
        start: {
          line: 8,
          column: 21
        },
        end: {
          line: 19,
          column: 1
        }
      },
      "7": {
        start: {
          line: 10,
          column: 8
        },
        end: {
          line: 10,
          column: 25
        }
      },
      "8": {
        start: {
          line: 11,
          column: 8
        },
        end: {
          line: 11,
          column: 65
        }
      },
      "9": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 100
        }
      },
      "10": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 100
        }
      },
      "11": {
        start: {
          line: 20,
          column: 0
        },
        end: {
          line: 23,
          column: 2
        }
      },
      "12": {
        start: {
          line: 20,
          column: 38
        },
        end: {
          line: 23,
          column: 1
        }
      },
      "13": {
        start: {
          line: 24,
          column: 0
        },
        end: {
          line: 27,
          column: 19
        }
      },
      "14": {
        start: {
          line: 28,
          column: 0
        },
        end: {
          line: 28,
          column: 40
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 9,
            column: 4
          },
          end: {
            line: 9,
            column: 5
          }
        },
        loc: {
          start: {
            line: 9,
            column: 48
          },
          end: {
            line: 12,
            column: 5
          }
        },
        line: 9
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 4
          },
          end: {
            line: 13,
            column: 5
          }
        },
        loc: {
          start: {
            line: 13,
            column: 17
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 5
          }
        },
        loc: {
          start: {
            line: 16,
            column: 17
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 20,
            column: 32
          },
          end: {
            line: 20,
            column: 33
          }
        },
        loc: {
          start: {
            line: 20,
            column: 38
          },
          end: {
            line: 23,
            column: 1
          }
        },
        line: 20
      }
    },
    branchMap: {},
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0
    },
    b: {},
    inputSourceMap: {
      file: "C:\\Users\\Nicolas\\Desktop\\test6\\gateway\\src\\main\\webapp\\app\\admin\\metrics\\metrics.service.ts",
      mappings: ";;;;AAAA,wCAA2C;AAC3C,+CAAkD;AAGlD,2FAAsF;IAIzE,cAAc,SAAd,cAAc;IACzB,YAAoB,IAAgB,EAAU,wBAAkD;QAA5E,SAAI,GAAJ,IAAI,CAAY;QAAU,6BAAwB,GAAxB,wBAAwB,CAA0B;IAAG,CAAC;IAEpG,UAAU;QACR,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAU,IAAI,CAAC,wBAAwB,CAAC,cAAc,CAAC,uBAAuB,CAAC,CAAC,CAAC;IACvG,CAAC;IAED,UAAU;QACR,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAa,IAAI,CAAC,wBAAwB,CAAC,cAAc,CAAC,uBAAuB,CAAC,CAAC,CAAC;IAC1G,CAAC;CACF,CAAA;;YAjBQ,iBAAU;YAGV,qDAAwB;;AAIpB,cAAc;IAD1B,iBAAU,CAAC,EAAE,UAAU,EAAE,MAAM,EAAE,CAAC;6CAEP,iBAAU,EAAoC,qDAAwB;GADrF,cAAc,CAU1B;AAVY,wCAAc",
      names: [],
      sources: ["C:\\Users\\Nicolas\\Desktop\\test6\\gateway\\src\\main\\webapp\\app\\admin\\metrics\\metrics.service.ts"],
      sourcesContent: ["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { ApplicationConfigService } from 'app/core/config/application-config.service';\nimport { Metrics, ThreadDump } from './metrics.model';\n\n@Injectable({ providedIn: 'root' })\nexport class MetricsService {\n  constructor(private http: HttpClient, private applicationConfigService: ApplicationConfigService) {}\n\n  getMetrics(): Observable<Metrics> {\n    return this.http.get<Metrics>(this.applicationConfigService.getEndpointFor('management/jhimetrics'));\n  }\n\n  threadDump(): Observable<ThreadDump> {\n    return this.http.get<ThreadDump>(this.applicationConfigService.getEndpointFor('management/threaddump'));\n  }\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "fd6f4023f979736c7bc949471586e84d085cea85"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1eifsj13qr = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}

cov_1eifsj13qr();
cov_1eifsj13qr().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});

/* istanbul ignore next */
cov_1eifsj13qr().s[1]++;
exports.MetricsService = void 0;
const tslib_1 =
/* istanbul ignore next */
(cov_1eifsj13qr().s[2]++, require("tslib"));
const core_1 =
/* istanbul ignore next */
(cov_1eifsj13qr().s[3]++, require("@angular/core"));
const http_1 =
/* istanbul ignore next */
(cov_1eifsj13qr().s[4]++, require("@angular/common/http"));
const application_config_service_1 =
/* istanbul ignore next */
(cov_1eifsj13qr().s[5]++, require("app/core/config/application-config.service"));

/* istanbul ignore next */
cov_1eifsj13qr().s[6]++;
let MetricsService = class MetricsService {
  constructor(http, applicationConfigService) {
    /* istanbul ignore next */
    cov_1eifsj13qr().f[0]++;
    cov_1eifsj13qr().s[7]++;
    this.http = http;

    /* istanbul ignore next */
    cov_1eifsj13qr().s[8]++;
    this.applicationConfigService = applicationConfigService;
  }

  getMetrics() {
    /* istanbul ignore next */
    cov_1eifsj13qr().f[1]++;
    cov_1eifsj13qr().s[9]++;
    return this.http.get(this.applicationConfigService.getEndpointFor('management/jhimetrics'));
  }

  threadDump() {
    /* istanbul ignore next */
    cov_1eifsj13qr().f[2]++;
    cov_1eifsj13qr().s[10]++;
    return this.http.get(this.applicationConfigService.getEndpointFor('management/threaddump'));
  }

};

/* istanbul ignore next */
cov_1eifsj13qr().s[11]++;

MetricsService.ctorParameters = () => {
  /* istanbul ignore next */
  cov_1eifsj13qr().f[3]++;
  cov_1eifsj13qr().s[12]++;
  return [{
    type: http_1.HttpClient
  }, {
    type: application_config_service_1.ApplicationConfigService
  }];
};

/* istanbul ignore next */
cov_1eifsj13qr().s[13]++;
MetricsService = tslib_1.__decorate([core_1.Injectable({
  providedIn: 'root'
}), tslib_1.__metadata("design:paramtypes", [http_1.HttpClient, application_config_service_1.ApplicationConfigService])], MetricsService);

/* istanbul ignore next */
cov_1eifsj13qr().s[14]++;
exports.MetricsService = MetricsService;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcTmljb2xhc1xcRGVza3RvcFxcdGVzdDZcXGdhdGV3YXlcXHNyY1xcbWFpblxcd2ViYXBwXFxhcHBcXGFkbWluXFxtZXRyaWNzXFxtZXRyaWNzLnNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQWVFOzs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQWZGLE1BQUEsTUFBQTtBQUFBO0FBQUEsMEJBQUEsT0FBQSxDQUFBLGVBQUEsQ0FBQSxDQUFBO0FBQ0EsTUFBQSxNQUFBO0FBQUE7QUFBQSwwQkFBQSxPQUFBLENBQUEsc0JBQUEsQ0FBQSxDQUFBO0FBR0EsTUFBQSw0QkFBQTtBQUFBO0FBQUEsMEJBQUEsT0FBQSxDQUFBLDRDQUFBLENBQUEsQ0FBQTs7OztJQUlhLGNBQWMsR0FBQSxNQUFkLGNBQWMsQ0FBQTtBQUN6QixFQUFBLFdBQUEsQ0FBb0IsSUFBcEIsRUFBOEMsd0JBQTlDLEVBQWdHO0FBQUE7QUFBQTtBQUFBO0FBQTVFLFNBQUEsSUFBQSxHQUFBLElBQUE7O0FBQTRFO0FBQUE7QUFBbEQsU0FBQSx3QkFBQSxHQUFBLHdCQUFBO0FBQXNEOztBQUVwRyxFQUFBLFVBQVUsR0FBQTtBQUFBO0FBQUE7QUFBQTtBQUNSLFdBQU8sS0FBSyxJQUFMLENBQVUsR0FBVixDQUF1QixLQUFLLHdCQUFMLENBQThCLGNBQTlCLENBQTZDLHVCQUE3QyxDQUF2QixDQUFQO0FBQ0Q7O0FBRUQsRUFBQSxVQUFVLEdBQUE7QUFBQTtBQUFBO0FBQUE7QUFDUixXQUFPLEtBQUssSUFBTCxDQUFVLEdBQVYsQ0FBMEIsS0FBSyx3QkFBTCxDQUE4QixjQUE5QixDQUE2Qyx1QkFBN0MsQ0FBMUIsQ0FBUDtBQUNEOztBQVR3QixDOzs7Ozs7Ozs7O1VBUGxCLE1BQUEsQ0FBQTs7VUFHQSw0QkFBQSxDQUFBOzs7Ozs7QUFJSSxjQUFjLEdBQUEsT0FBQSxDQUFBLFVBQUEsQ0FBQSxDQUQxQixNQUFBLENBQUEsVUFBQSxDQUFXO0FBQUUsRUFBQSxVQUFVLEVBQUU7QUFBZCxDQUFYLENBQzBCLEUseUNBQ0MsTUFBQSxDQUFBLFUsRUFBOEMsNEJBQUEsQ0FBQSx3QixFQUQvQyxDQUFBLEVBQWQsY0FBYyxDQUFkOzs7O0FBQUEsT0FBQSxDQUFBLGNBQUEsR0FBQSxjQUFBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgSHR0cENsaWVudCB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbi9odHRwJztcbmltcG9ydCB7IE9ic2VydmFibGUgfSBmcm9tICdyeGpzJztcblxuaW1wb3J0IHsgQXBwbGljYXRpb25Db25maWdTZXJ2aWNlIH0gZnJvbSAnYXBwL2NvcmUvY29uZmlnL2FwcGxpY2F0aW9uLWNvbmZpZy5zZXJ2aWNlJztcbmltcG9ydCB7IE1ldHJpY3MsIFRocmVhZER1bXAgfSBmcm9tICcuL21ldHJpY3MubW9kZWwnO1xuXG5ASW5qZWN0YWJsZSh7IHByb3ZpZGVkSW46ICdyb290JyB9KVxuZXhwb3J0IGNsYXNzIE1ldHJpY3NTZXJ2aWNlIHtcbiAgY29uc3RydWN0b3IocHJpdmF0ZSBodHRwOiBIdHRwQ2xpZW50LCBwcml2YXRlIGFwcGxpY2F0aW9uQ29uZmlnU2VydmljZTogQXBwbGljYXRpb25Db25maWdTZXJ2aWNlKSB7fVxuXG4gIGdldE1ldHJpY3MoKTogT2JzZXJ2YWJsZTxNZXRyaWNzPiB7XG4gICAgcmV0dXJuIHRoaXMuaHR0cC5nZXQ8TWV0cmljcz4odGhpcy5hcHBsaWNhdGlvbkNvbmZpZ1NlcnZpY2UuZ2V0RW5kcG9pbnRGb3IoJ21hbmFnZW1lbnQvamhpbWV0cmljcycpKTtcbiAgfVxuXG4gIHRocmVhZER1bXAoKTogT2JzZXJ2YWJsZTxUaHJlYWREdW1wPiB7XG4gICAgcmV0dXJuIHRoaXMuaHR0cC5nZXQ8VGhyZWFkRHVtcD4odGhpcy5hcHBsaWNhdGlvbkNvbmZpZ1NlcnZpY2UuZ2V0RW5kcG9pbnRGb3IoJ21hbmFnZW1lbnQvdGhyZWFkZHVtcCcpKTtcbiAgfVxufVxuIl19