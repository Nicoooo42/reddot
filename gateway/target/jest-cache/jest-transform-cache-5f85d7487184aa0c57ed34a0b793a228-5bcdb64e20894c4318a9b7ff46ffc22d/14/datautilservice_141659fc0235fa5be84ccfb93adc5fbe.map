{"version":3,"sources":["C:\\Users\\Nicolas\\Desktop\\test6\\gateway\\src\\main\\webapp\\app\\core\\util\\data-util.service.ts"],"names":[],"mappingswBG;;;;;;;;;;;;;;;;;;;;AAxBH,MAAA,MAAA;AAAA;AAAA,0BAAA,OAAA,CAAA,eAAA,CAAA,CAAA;AAEA,MAAA,MAAA;AAAA;AAAA,0BAAA,OAAA,CAAA,MAAA,CAAA,CAAA;AAUA;;AAEG;;;;IAIU,SAAS,GAAA,MAAT,SAAS,CAAA;AACpB;;AAEG;AACH,EAAA,QAAQ,CAAC,YAAD,EAAqB;AAAA;AAAA;AAAA;AAC3B,WAAO,KAAK,aAAL,CAAmB,KAAK,IAAL,CAAU,YAAV,CAAnB,CAAP;AACD;AAED;;AAEG;;;AACH,EAAA,QAAQ,CAAC,IAAD,EAAe,WAAf,EAAqD;AAAA;AAAA;AAAA;AAC3D,IAAA,WAAW;AAAG;AAAA,iCAAA,WAAW,KAAA,IAAX;AAAA;AAAA,iCAAA,WAAW,KAAA,KAAA,CAAX;AAAA;AAAA,iCAAA,WAAA;AAAA;AAAA,iCAAe,EAAf,CAAd;AAEA,UAAM,cAAc;AAAA;AAAA,8BAAG,IAAI,CAAC,IAAD,CAAP,CAApB;AACA,UAAM,WAAW;AAAA;AAAA,8BAAG,IAAI,KAAJ,CAAU,cAAc,CAAC,MAAzB,CAAH,CAAjB;;AAJ2D;AAAA;;AAK3D,SAAK,IAAI,CAAC;AAAA;AAAA,+BAAG,CAAH,CAAV,EAAgB,CAAC,GAAG,cAAc,CAAC,MAAnC,EAA2C,CAAC,EAA5C,EAAgD;AAAA;AAAA;AAC9C,MAAA,WAAW,CAAC,CAAD,CAAX,GAAiB,cAAc,CAAC,UAAf,CAA0B,CAA1B,CAAjB;AACD;;AACD,UAAM,SAAS;AAAA;AAAA,+BAAG,IAAI,UAAJ,CAAe,WAAf,CAAH,CAAf;AACA,UAAM,IAAI;AAAA;AAAA,+BAAG,IAAI,IAAJ,CAAS,CAAC,SAAD,CAAT,EAAsB;AACjC,MAAA,IAAI,EAAE;AAD2B,KAAtB,CAAH,CAAV;AAGA,UAAM,OAAO;AAAA;AAAA,+BAAG,MAAM,CAAC,GAAP,CAAW,eAAX,CAA2B,IAA3B,CAAH,CAAb;AACA,UAAM,GAAG;AAAA;AAAA,+BAAG,MAAM,CAAC,IAAP,CAAY,OAAZ,CAAH,CAAT;;AAb2D;AAAA;;AAc3D,IAAA,GAAI,CAAC,MAAL,GAAc,YAAA;AAAA;AAAA;AAAA;AACZ,MAAA,GAAG,CAAC,eAAJ,CAAoB,OAApB;AACD,KAFD;AAGD;AAED;;;;;;;;;;AAUG;;;AACH,EAAA,cAAc,CAAC,KAAD,EAAe,QAAf,EAAoC,KAApC,EAAmD,OAAnD,EAAmE;AAAA;AAAA;AAAA;AAC/E,WAAO,IAAI,MAAA,CAAA,UAAJ,CAAe,CAAC,QAAD,KAA6B;AAAA;AAAA;;;;AACjD,YAAM,WAAW;AAAA;AAAA,iCAA4B,KAAK,CAAC,MAAlC,CAAjB;;AADiD;AAAA;;AAEjD;AAAI;AAAA,oCAAA,EAAA;AAAA;AAAA,mCAAA,WAAW,KAAA,IAAX;AAAA;AAAA,mCAAA,WAAW,KAAA,KAAA,CAAX;AAAA;AAAA,mCAAW,KAAA,CAAX;AAAA;AAAA,mCAAA,WAAW,CAAE,KAAb,CAAA,MAAkB,IAAlB;AAAA;AAAA,mCAAkB,EAAA,KAAA,KAAA,CAAlB;AAAA;AAAA,mCAAkB,KAAA,CAAlB;AAAA;AAAA,mCAAkB,EAAA,CAAG,CAAH,CAAlB,CAAJ,EAA6B;AAAA;AAAA;AAC3B,cAAM,IAAI;AAAA;AAAA,mCAAS,WAAW,CAAC,KAAZ,CAAkB,CAAlB,CAAT,CAAV;;AAD2B;AAAA;;AAE3B;AAAI;AAAA,qCAAA,OAAO;AAAA;AAAA,qCAAI,CAAC,IAAI,CAAC,IAAL,CAAU,UAAV,CAAqB,QAArB,CAAL,CAAX,EAAgD;AAAA;AAAA;AAC9C,gBAAM,KAAK;AAAA;AAAA,qCAAkB;AAC3B,YAAA,OAAO,EAAE,yDAAyD,IAAI,CAAC,IAAI,GADhD;AAE3B,YAAA,GAAG,EAAE,WAFsB;AAG3B,YAAA,MAAM,EAAE;AAAE,cAAA,QAAQ,EAAE,IAAI,CAAC;AAAjB;AAHmB,WAAlB,CAAX;;AAD8C;AAAA;AAM9C,UAAA,QAAQ,CAAC,KAAT,CAAe,KAAf;AACD,SAPD,MAOO;AAAA;AAAA;AACL,gBAAM,gBAAgB;AAAA;AAAA,qCAAW,KAAK,GAAG,aAAnB,CAAtB;;AADK;AAAA;AAEL,eAAK,QAAL,CAAc,IAAd,EAAoB,CAAC,UAAD,KAAuB;AAAA;AAAA;AAAA;AACzC,YAAA,QAAQ,CAAC,UAAT,CAAoB;AAClB,eAAC,KAAD,GAAS,UADS;AAElB,eAAC,gBAAD,GAAoB,IAAI,CAAC;AAFP,aAApB;;AADyC;AAAA;AAKzC,YAAA,QAAQ,CAAC,IAAT;;AALyC;AAAA;AAMzC,YAAA,QAAQ,CAAC,QAAT;AACD,WAPD;AAQD;AACF,OApBD,MAoBO;AAAA;AAAA;AACL,cAAM,KAAK;AAAA;AAAA,mCAAkB;AAC3B,UAAA,OAAO,EAAE,wBADkB;AAE3B,UAAA,GAAG,EAAE,mBAFsB;AAG3B,UAAA,MAAM,EAAE;AAAE,YAAA;AAAF;AAHmB,SAAlB,CAAX;;AADK;AAAA;AAML,QAAA,QAAQ,CAAC,KAAT,CAAe,KAAf;AACD;AACF,KA9BM,CAAP;AA+BD;AAED;;AAEG;;;AACK,EAAA,QAAQ,CAAC,IAAD,EAAa,QAAb,EAAmD;AAAA;AAAA;AACjE,UAAM,UAAU;AAAA;AAAA,+BAAe,IAAI,UAAJ,EAAf,CAAhB;;AADiE;AAAA;;AAEjE,IAAA,UAAU,CAAC,MAAX,GAAoB,CAAC,CAAD,KAAiC;AAAA;AAAA;;;;AAAA;AAAA;;AACnD,UAAI;AAAO;AAAA,qCAAA,EAAA,GAAA,CAAC,CAAC,MAAF,MAAQ,IAAR;AAAA;AAAA,oCAAQ,EAAA,KAAA,KAAA,CAAR;AAAA;AAAA,oCAAQ,KAAA,CAAR;AAAA;AAAA,oCAAQ,EAAA,CAAE,MAAV,CAAP,MAA4B,QAAhC,EAA0C;AAAA;AAAA;AACxC,cAAM,UAAU;AAAA;AAAA,mCAAW,CAAC,CAAC,MAAF,CAAS,MAAT,CAAgB,MAAhB,CAAuB,CAAC,CAAC,MAAF,CAAS,MAAT,CAAgB,OAAhB,CAAwB,SAAxB,IAAqC,UAAU,MAAtE,CAAX,CAAhB;;AADwC;AAAA;AAExC,QAAA,QAAQ,CAAC,UAAD,CAAR;AACD,OAHD;AAAA;AAAA;AAAA;AAAA;AAID,KALD;;AAFiE;AAAA;AAQjE,IAAA,UAAU,CAAC,aAAX,CAAyB,IAAzB;AACD;;AAEO,EAAA,QAAQ,CAAC,MAAD,EAAiB,GAAjB,EAA4B;AAAA;AAAA;AAAA;AAC1C,WAAO,GAAG,CAAC,QAAJ,CAAa,MAAb,EAAqB,GAAG,CAAC,MAAJ,GAAa,MAAM,CAAC,MAAzC,CAAP;AACD;;AAEO,EAAA,WAAW,CAAC,KAAD,EAAc;AAAA;AAAA;AAAA;;AAC/B,QAAI,KAAK,QAAL,CAAc,IAAd,EAAoB,KAApB,CAAJ,EAAgC;AAAA;AAAA;AAAA;AAC9B,aAAO,CAAP;AACD,KAFD;AAAA;AAAA;AAAA;AAAA;;AAD+B;;AAI/B,QAAI,KAAK,QAAL,CAAc,GAAd,EAAmB,KAAnB,CAAJ,EAA+B;AAAA;AAAA;AAAA;AAC7B,aAAO,CAAP;AACD,KAFD;AAAA;AAAA;AAAA;AAAA;;AAJ+B;AAO/B,WAAO,CAAP;AACD;;AAEO,EAAA,IAAI,CAAC,KAAD,EAAc;AAAA;AAAA;AAAA;AACxB,WAAQ,KAAK,CAAC,MAAN,GAAe,CAAhB,GAAqB,CAArB,GAAyB,KAAK,WAAL,CAAiB,KAAjB,CAAhC;AACD;;AAEO,EAAA,aAAa,CAAC,IAAD,EAAa;AAAA;AAAA;AAAA;AAChC,WAAO,IAAI,CAAC,QAAL,GAAgB,OAAhB,CAAwB,uBAAxB,EAAiD,GAAjD,IAAwD,QAA/D;AACD;;AA7GmB,C;;;;AAAT,SAAS,GAAA,OAAA,CAAA,UAAA,CAAA,CAHrB,MAAA,CAAA,UAAA,CAAW;AACV,EAAA,UAAU,EAAE;AADF,CAAX,CAGqB,CAAA,EAAT,SAAS,CAAT;;;;AAAA,OAAA,CAAA,SAAA,GAAA,SAAA","sourcesContent":["import { Injectable } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { Observable, Observer } from 'rxjs';\n\nexport type FileLoadErrorType = 'not.image' | 'could.not.extract';\n\nexport interface FileLoadError {\n  message: string;\n  key: FileLoadErrorType;\n  params?: any;\n}\n\n/**\n * An utility service for data.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class DataUtils {\n  /**\n   * Method to find the byte size of the string provides\n   */\n  byteSize(base64String: string): string {\n    return this.formatAsBytes(this.size(base64String));\n  }\n\n  /**\n   * Method to open file\n   */\n  openFile(data: string, contentType: string | null | undefined): void {\n    contentType = contentType ?? '';\n\n    const byteCharacters = atob(data);\n    const byteNumbers = new Array(byteCharacters.length);\n    for (let i = 0; i < byteCharacters.length; i++) {\n      byteNumbers[i] = byteCharacters.charCodeAt(i);\n    }\n    const byteArray = new Uint8Array(byteNumbers);\n    const blob = new Blob([byteArray], {\n      type: contentType,\n    });\n    const fileURL = window.URL.createObjectURL(blob);\n    const win = window.open(fileURL);\n    win!.onload = function () {\n      URL.revokeObjectURL(fileURL);\n    };\n  }\n\n  /**\n   * Sets the base 64 data & file type of the 1st file on the event (event.target.files[0]) in the passed entity object\n   * and returns an observable.\n   *\n   * @param event the object containing the file (at event.target.files[0])\n   * @param editForm the form group where the input field is located\n   * @param field the field name to set the file's 'base 64 data' on\n   * @param isImage boolean representing if the file represented by the event is an image\n   * @returns an observable that loads file to form field and completes if sussessful\n   *      or returns error as FileLoadError on failure\n   */\n  loadFileToForm(event: Event, editForm: FormGroup, field: string, isImage: boolean): Observable<void> {\n    return new Observable((observer: Observer<void>) => {\n      const eventTarget: HTMLInputElement | null = event.target as HTMLInputElement | null;\n      if (eventTarget?.files?.[0]) {\n        const file: File = eventTarget.files[0];\n        if (isImage && !file.type.startsWith('image/')) {\n          const error: FileLoadError = {\n            message: `File was expected to be an image but was found to be '${file.type}'`,\n            key: 'not.image',\n            params: { fileType: file.type },\n          };\n          observer.error(error);\n        } else {\n          const fieldContentType: string = field + 'ContentType';\n          this.toBase64(file, (base64Data: string) => {\n            editForm.patchValue({\n              [field]: base64Data,\n              [fieldContentType]: file.type,\n            });\n            observer.next();\n            observer.complete();\n          });\n        }\n      } else {\n        const error: FileLoadError = {\n          message: 'Could not extract file',\n          key: 'could.not.extract',\n          params: { event },\n        };\n        observer.error(error);\n      }\n    });\n  }\n\n  /**\n   * Method to convert the file to base64\n   */\n  private toBase64(file: File, callback: (base64Data: string) => void): void {\n    const fileReader: FileReader = new FileReader();\n    fileReader.onload = (e: ProgressEvent<FileReader>) => {\n      if (typeof e.target?.result === 'string') {\n        const base64Data: string = e.target.result.substr(e.target.result.indexOf('base64,') + 'base64,'.length);\n        callback(base64Data);\n      }\n    };\n    fileReader.readAsDataURL(file);\n  }\n\n  private endsWith(suffix: string, str: string): boolean {\n    return str.includes(suffix, str.length - suffix.length);\n  }\n\n  private paddingSize(value: string): number {\n    if (this.endsWith('==', value)) {\n      return 2;\n    }\n    if (this.endsWith('=', value)) {\n      return 1;\n    }\n    return 0;\n  }\n\n  private size(value: string): number {\n    return (value.length / 4) * 3 - this.paddingSize(value);\n  }\n\n  private formatAsBytes(size: number): string {\n    return size.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ' ') + ' bytes';\n  }\n}\n"]}