{"file":"C:\\Users\\Nicolas\\Desktop\\test6\\gateway\\src\\main\\webapp\\app\\shared\\alert\\alert.component.spec.ts","mappings":";;AAAA,IAAI,CAAC,IAAI,CAAC,6BAA6B,CAAC,CAAC;AAEzC,mDAAgF;AAEhF,+DAA2D;AAE3D,uDAAmD;AAEnD,QAAQ,CAAC,iBAAiB,EAAE,GAAG,EAAE;IAC/B,IAAI,IAAoB,CAAC;IACzB,IAAI,OAAyC,CAAC;IAC9C,IAAI,gBAA8B,CAAC;IAEnC,UAAU,CACR,sBAAY,CAAC,GAAG,EAAE;QAChB,iBAAO,CAAC,sBAAsB,CAAC;YAC7B,YAAY,EAAE,CAAC,gCAAc,CAAC;YAC9B,SAAS,EAAE,CAAC,4BAAY,CAAC;SAC1B,CAAC;aACC,gBAAgB,CAAC,gCAAc,EAAE,EAAE,CAAC;aACpC,iBAAiB,EAAE,CAAC;IACzB,CAAC,CAAC,CACH,CAAC;IAEF,UAAU,CAAC,GAAG,EAAE;QACd,OAAO,GAAG,iBAAO,CAAC,eAAe,CAAC,gCAAc,CAAC,CAAC;QAClD,IAAI,GAAG,OAAO,CAAC,iBAAiB,CAAC;QACjC,gBAAgB,GAAG,iBAAO,CAAC,MAAM,CAAC,4BAAY,CAAC,CAAC;IAClD,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,sCAAsC,EAAE,GAAG,EAAE;QAC9C,OAAO;QACP,IAAI,CAAC,QAAQ,EAAE,CAAC;QAEhB,OAAO;QACP,MAAM,CAAC,gBAAgB,CAAC,GAAG,CAAC,CAAC,gBAAgB,EAAE,CAAC;IAClD,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,2CAA2C,EAAE,GAAG,EAAE;QACnD,OAAO;QACP,IAAI,CAAC,WAAW,EAAE,CAAC;QAEnB,OAAO;QACP,MAAM,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC,gBAAgB,EAAE,CAAC;IACpD,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","names":[],"sources":["C:\\Users\\Nicolas\\Desktop\\test6\\gateway\\src\\main\\webapp\\app\\shared\\alert\\alert.component.spec.ts"],"sourcesContent":["jest.mock('app/core/util/alert.service');\n\nimport { ComponentFixture, TestBed, waitForAsync } from '@angular/core/testing';\n\nimport { AlertService } from 'app/core/util/alert.service';\n\nimport { AlertComponent } from './alert.component';\n\ndescribe('Alert Component', () => {\n  let comp: AlertComponent;\n  let fixture: ComponentFixture<AlertComponent>;\n  let mockAlertService: AlertService;\n\n  beforeEach(\n    waitForAsync(() => {\n      TestBed.configureTestingModule({\n        declarations: [AlertComponent],\n        providers: [AlertService],\n      })\n        .overrideTemplate(AlertComponent, '')\n        .compileComponents();\n    })\n  );\n\n  beforeEach(() => {\n    fixture = TestBed.createComponent(AlertComponent);\n    comp = fixture.componentInstance;\n    mockAlertService = TestBed.inject(AlertService);\n  });\n\n  it('Should call alertService.get on init', () => {\n    // WHEN\n    comp.ngOnInit();\n\n    // THEN\n    expect(mockAlertService.get).toHaveBeenCalled();\n  });\n\n  it('Should call alertService.clear on destroy', () => {\n    // WHEN\n    comp.ngOnDestroy();\n\n    // THEN\n    expect(mockAlertService.clear).toHaveBeenCalled();\n  });\n});\n"],"version":3}