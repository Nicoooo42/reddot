d1d17f82be2a2cb46f0a90505eee67ac
"use strict";

/* istanbul ignore next */
function cov_v7k59md7z() {
  var path = "C:\\Users\\Nicolas\\Desktop\\test6\\gateway\\src\\main\\webapp\\app\\core\\util\\operators.ts";
  var hash = "76f24bac652b3628783da45daebfd2163d0d7926";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\Nicolas\\Desktop\\test6\\gateway\\src\\main\\webapp\\app\\core\\util\\operators.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 47
        }
      },
      "2": {
        start: {
          line: 9,
          column: 4
        },
        end: {
          line: 9,
          column: 41
        }
      },
      "3": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 11,
          column: 30
        }
      },
      "4": {
        start: {
          line: 12,
          column: 18
        },
        end: {
          line: 12,
          column: 55
        }
      },
      "5": {
        start: {
          line: 12,
          column: 30
        },
        end: {
          line: 12,
          column: 54
        }
      },
      "6": {
        start: {
          line: 13,
          column: 0
        },
        end: {
          line: 13,
          column: 30
        }
      }
    },
    fnMap: {
      "0": {
        name: "isPresent",
        decl: {
          start: {
            line: 8,
            column: 9
          },
          end: {
            line: 8,
            column: 18
          }
        },
        loc: {
          start: {
            line: 8,
            column: 22
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 8
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 12,
            column: 18
          },
          end: {
            line: 12,
            column: 19
          }
        },
        loc: {
          start: {
            line: 12,
            column: 30
          },
          end: {
            line: 12,
            column: 54
          }
        },
        line: 12
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 9,
            column: 11
          },
          end: {
            line: 9,
            column: 40
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 9,
            column: 11
          },
          end: {
            line: 9,
            column: 26
          }
        }, {
          start: {
            line: 9,
            column: 30
          },
          end: {
            line: 9,
            column: 40
          }
        }],
        line: 9
      },
      "1": {
        loc: {
          start: {
            line: 12,
            column: 30
          },
          end: {
            line: 12,
            column: 54
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 12,
            column: 45
          },
          end: {
            line: 12,
            column: 46
          }
        }, {
          start: {
            line: 12,
            column: 49
          },
          end: {
            line: 12,
            column: 54
          }
        }],
        line: 12
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0
    },
    f: {
      "0": 0,
      "1": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0]
    },
    inputSourceMap: {
      file: "C:\\Users\\Nicolas\\Desktop\\test6\\gateway\\src\\main\\webapp\\app\\core\\util\\operators.ts",
      mappings: ";;;AAAA;;;GAGG;AACH,SAAgB,SAAS,CAAI,CAA8B;IACzD,OAAO,CAAC,KAAK,SAAS,IAAI,CAAC,KAAK,IAAI,CAAC;AACvC,CAAC;AAFD,8BAEC;AAEM,MAAM,SAAS,GAAG,CAAC,KAAa,EAAU,EAAE,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;AAAlE,QAAA,SAAS,aAAyD",
      names: [],
      sources: ["C:\\Users\\Nicolas\\Desktop\\test6\\gateway\\src\\main\\webapp\\app\\core\\util\\operators.ts"],
      sourcesContent: ["/*\n * Function used to workaround https://github.com/microsoft/TypeScript/issues/16069\n * es2019 alternative `const filteredArr = myArr.flatMap((x) => x ? x : []);`\n */\nexport function isPresent<T>(t: T | undefined | null | void): t is T {\n  return t !== undefined && t !== null;\n}\n\nexport const filterNaN = (input: number): number => (isNaN(input) ? 0 : input);\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "76f24bac652b3628783da45daebfd2163d0d7926"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_v7k59md7z = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}

cov_v7k59md7z();
cov_v7k59md7z().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});

/* istanbul ignore next */
cov_v7k59md7z().s[1]++;
exports.filterNaN = exports.isPresent = void 0;
/*
 * Function used to workaround https://github.com/microsoft/TypeScript/issues/16069
 * es2019 alternative `const filteredArr = myArr.flatMap((x) => x ? x : []);`
 */

function isPresent(t) {
  /* istanbul ignore next */
  cov_v7k59md7z().f[0]++;
  cov_v7k59md7z().s[2]++;
  return (
    /* istanbul ignore next */
    (cov_v7k59md7z().b[0][0]++, t !== undefined) &&
    /* istanbul ignore next */
    (cov_v7k59md7z().b[0][1]++, t !== null)
  );
}

/* istanbul ignore next */
cov_v7k59md7z().s[3]++;
exports.isPresent = isPresent;

/* istanbul ignore next */
cov_v7k59md7z().s[4]++;

const filterNaN = (input) => {
  /* istanbul ignore next */
  cov_v7k59md7z().f[1]++;
  cov_v7k59md7z().s[5]++;
  return isNaN(input) ?
  /* istanbul ignore next */
  (cov_v7k59md7z().b[1][0]++, 0) :
  /* istanbul ignore next */
  (cov_v7k59md7z().b[1][1]++, input);
};

/* istanbul ignore next */
cov_v7k59md7z().s[6]++;
exports.filterNaN = filterNaN;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcTmljb2xhc1xcRGVza3RvcFxcdGVzdDZcXGdhdGV3YXlcXHNyY1xcbWFpblxcd2ViYXBwXFxhcHBcXGNvcmVcXHV0aWxcXG9wZXJhdG9ycy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7OztBQUdHOztBQUNILFNBQWdCLFNBQWhCLENBQTZCLENBQTdCLEVBQTJEO0FBQUE7QUFBQTtBQUFBO0FBQ3pELFNBQU87QUFBQTtBQUFBLGdDQUFBLENBQUMsS0FBSyxTQUFOO0FBQUE7QUFBQSxnQ0FBbUIsQ0FBQyxLQUFLLElBQXpCO0FBQVA7QUFDRDs7OztBQUZELE9BQUEsQ0FBQSxTQUFBLEdBQUEsU0FBQTs7Ozs7QUFJTyxNQUFNLFNBQVMsR0FBRyxDQUFDLEtBQUQsS0FBNEI7QUFBQTtBQUFBO0FBQUE7QUFBQSxTQUFBLEtBQUssQ0FBQyxLQUFELENBQUw7QUFBQTtBQUFBLDhCQUFlLENBQWY7QUFBQTtBQUFBLDhCQUFtQixLQUFuQjtBQUF3QixDQUF0RTs7OztBQUFNLE9BQUEsQ0FBQSxTQUFBLEdBQVMsU0FBVCIsInNvdXJjZXNDb250ZW50IjpbIi8qXG4gKiBGdW5jdGlvbiB1c2VkIHRvIHdvcmthcm91bmQgaHR0cHM6Ly9naXRodWIuY29tL21pY3Jvc29mdC9UeXBlU2NyaXB0L2lzc3Vlcy8xNjA2OVxuICogZXMyMDE5IGFsdGVybmF0aXZlIGBjb25zdCBmaWx0ZXJlZEFyciA9IG15QXJyLmZsYXRNYXAoKHgpID0+IHggPyB4IDogW10pO2BcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGlzUHJlc2VudDxUPih0OiBUIHwgdW5kZWZpbmVkIHwgbnVsbCB8IHZvaWQpOiB0IGlzIFQge1xuICByZXR1cm4gdCAhPT0gdW5kZWZpbmVkICYmIHQgIT09IG51bGw7XG59XG5cbmV4cG9ydCBjb25zdCBmaWx0ZXJOYU4gPSAoaW5wdXQ6IG51bWJlcik6IG51bWJlciA9PiAoaXNOYU4oaW5wdXQpID8gMCA6IGlucHV0KTtcbiJdfQ==