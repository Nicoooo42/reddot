4e914f67a30c9861c5fae7a36292bcc9
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const testing_1 = require("@angular/core/testing");
const application_config_service_1 = require("./application-config.service");
describe('ApplicationConfigService', () => {
    let service;
    beforeEach(() => {
        testing_1.TestBed.configureTestingModule({});
        service = testing_1.TestBed.inject(application_config_service_1.ApplicationConfigService);
    });
    it('should be created', () => {
        expect(service).toBeTruthy();
    });
    describe('without prefix', () => {
        it('should return correctly', () => {
            expect(service.getEndpointFor('api')).toEqual('api');
        });
        it('should return correctly when passing microservice', () => {
            expect(service.getEndpointFor('api', 'microservice')).toEqual('services/microservice/api');
        });
    });
    describe('with prefix', () => {
        beforeEach(() => {
            service.setEndpointPrefix('prefix/');
        });
        it('should return correctly', () => {
            expect(service.getEndpointFor('api')).toEqual('prefix/api');
        });
        it('should return correctly when passing microservice', () => {
            expect(service.getEndpointFor('api', 'microservice')).toEqual('prefix/services/microservice/api');
        });
    });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiQzpcXFVzZXJzXFxOaWNvbGFzXFxEZXNrdG9wXFx0ZXN0NlxcZ2F0ZXdheVxcc3JjXFxtYWluXFx3ZWJhcHBcXGFwcFxcY29yZVxcY29uZmlnXFxhcHBsaWNhdGlvbi1jb25maWcuc2VydmljZS5zcGVjLnRzIiwibWFwcGluZ3MiOiI7O0FBQUEsbURBQWdEO0FBRWhELDZFQUF3RTtBQUV4RSxRQUFRLENBQUMsMEJBQTBCLEVBQUUsR0FBRyxFQUFFO0lBQ3hDLElBQUksT0FBaUMsQ0FBQztJQUV0QyxVQUFVLENBQUMsR0FBRyxFQUFFO1FBQ2QsaUJBQU8sQ0FBQyxzQkFBc0IsQ0FBQyxFQUFFLENBQUMsQ0FBQztRQUNuQyxPQUFPLEdBQUcsaUJBQU8sQ0FBQyxNQUFNLENBQUMscURBQXdCLENBQUMsQ0FBQztJQUNyRCxDQUFDLENBQUMsQ0FBQztJQUVILEVBQUUsQ0FBQyxtQkFBbUIsRUFBRSxHQUFHLEVBQUU7UUFDM0IsTUFBTSxDQUFDLE9BQU8sQ0FBQyxDQUFDLFVBQVUsRUFBRSxDQUFDO0lBQy9CLENBQUMsQ0FBQyxDQUFDO0lBRUgsUUFBUSxDQUFDLGdCQUFnQixFQUFFLEdBQUcsRUFBRTtRQUM5QixFQUFFLENBQUMseUJBQXlCLEVBQUUsR0FBRyxFQUFFO1lBQ2pDLE1BQU0sQ0FBQyxPQUFPLENBQUMsY0FBYyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsT0FBTyxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBQ3ZELENBQUMsQ0FBQyxDQUFDO1FBRUgsRUFBRSxDQUFDLG1EQUFtRCxFQUFFLEdBQUcsRUFBRTtZQUMzRCxNQUFNLENBQUMsT0FBTyxDQUFDLGNBQWMsQ0FBQyxLQUFLLEVBQUUsY0FBYyxDQUFDLENBQUMsQ0FBQyxPQUFPLENBQUMsMkJBQTJCLENBQUMsQ0FBQztRQUM3RixDQUFDLENBQUMsQ0FBQztJQUNMLENBQUMsQ0FBQyxDQUFDO0lBRUgsUUFBUSxDQUFDLGFBQWEsRUFBRSxHQUFHLEVBQUU7UUFDM0IsVUFBVSxDQUFDLEdBQUcsRUFBRTtZQUNkLE9BQU8sQ0FBQyxpQkFBaUIsQ0FBQyxTQUFTLENBQUMsQ0FBQztRQUN2QyxDQUFDLENBQUMsQ0FBQztRQUVILEVBQUUsQ0FBQyx5QkFBeUIsRUFBRSxHQUFHLEVBQUU7WUFDakMsTUFBTSxDQUFDLE9BQU8sQ0FBQyxjQUFjLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxPQUFPLENBQUMsWUFBWSxDQUFDLENBQUM7UUFDOUQsQ0FBQyxDQUFDLENBQUM7UUFFSCxFQUFFLENBQUMsbURBQW1ELEVBQUUsR0FBRyxFQUFFO1lBQzNELE1BQU0sQ0FBQyxPQUFPLENBQUMsY0FBYyxDQUFDLEtBQUssRUFBRSxjQUFjLENBQUMsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxrQ0FBa0MsQ0FBQyxDQUFDO1FBQ3BHLENBQUMsQ0FBQyxDQUFDO0lBQ0wsQ0FBQyxDQUFDLENBQUM7QUFDTCxDQUFDLENBQUMsQ0FBQyIsIm5hbWVzIjpbXSwic291cmNlcyI6WyJDOlxcVXNlcnNcXE5pY29sYXNcXERlc2t0b3BcXHRlc3Q2XFxnYXRld2F5XFxzcmNcXG1haW5cXHdlYmFwcFxcYXBwXFxjb3JlXFxjb25maWdcXGFwcGxpY2F0aW9uLWNvbmZpZy5zZXJ2aWNlLnNwZWMudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgVGVzdEJlZCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUvdGVzdGluZyc7XG5cbmltcG9ydCB7IEFwcGxpY2F0aW9uQ29uZmlnU2VydmljZSB9IGZyb20gJy4vYXBwbGljYXRpb24tY29uZmlnLnNlcnZpY2UnO1xuXG5kZXNjcmliZSgnQXBwbGljYXRpb25Db25maWdTZXJ2aWNlJywgKCkgPT4ge1xuICBsZXQgc2VydmljZTogQXBwbGljYXRpb25Db25maWdTZXJ2aWNlO1xuXG4gIGJlZm9yZUVhY2goKCkgPT4ge1xuICAgIFRlc3RCZWQuY29uZmlndXJlVGVzdGluZ01vZHVsZSh7fSk7XG4gICAgc2VydmljZSA9IFRlc3RCZWQuaW5qZWN0KEFwcGxpY2F0aW9uQ29uZmlnU2VydmljZSk7XG4gIH0pO1xuXG4gIGl0KCdzaG91bGQgYmUgY3JlYXRlZCcsICgpID0+IHtcbiAgICBleHBlY3Qoc2VydmljZSkudG9CZVRydXRoeSgpO1xuICB9KTtcblxuICBkZXNjcmliZSgnd2l0aG91dCBwcmVmaXgnLCAoKSA9PiB7XG4gICAgaXQoJ3Nob3VsZCByZXR1cm4gY29ycmVjdGx5JywgKCkgPT4ge1xuICAgICAgZXhwZWN0KHNlcnZpY2UuZ2V0RW5kcG9pbnRGb3IoJ2FwaScpKS50b0VxdWFsKCdhcGknKTtcbiAgICB9KTtcblxuICAgIGl0KCdzaG91bGQgcmV0dXJuIGNvcnJlY3RseSB3aGVuIHBhc3NpbmcgbWljcm9zZXJ2aWNlJywgKCkgPT4ge1xuICAgICAgZXhwZWN0KHNlcnZpY2UuZ2V0RW5kcG9pbnRGb3IoJ2FwaScsICdtaWNyb3NlcnZpY2UnKSkudG9FcXVhbCgnc2VydmljZXMvbWljcm9zZXJ2aWNlL2FwaScpO1xuICAgIH0pO1xuICB9KTtcblxuICBkZXNjcmliZSgnd2l0aCBwcmVmaXgnLCAoKSA9PiB7XG4gICAgYmVmb3JlRWFjaCgoKSA9PiB7XG4gICAgICBzZXJ2aWNlLnNldEVuZHBvaW50UHJlZml4KCdwcmVmaXgvJyk7XG4gICAgfSk7XG5cbiAgICBpdCgnc2hvdWxkIHJldHVybiBjb3JyZWN0bHknLCAoKSA9PiB7XG4gICAgICBleHBlY3Qoc2VydmljZS5nZXRFbmRwb2ludEZvcignYXBpJykpLnRvRXF1YWwoJ3ByZWZpeC9hcGknKTtcbiAgICB9KTtcblxuICAgIGl0KCdzaG91bGQgcmV0dXJuIGNvcnJlY3RseSB3aGVuIHBhc3NpbmcgbWljcm9zZXJ2aWNlJywgKCkgPT4ge1xuICAgICAgZXhwZWN0KHNlcnZpY2UuZ2V0RW5kcG9pbnRGb3IoJ2FwaScsICdtaWNyb3NlcnZpY2UnKSkudG9FcXVhbCgncHJlZml4L3NlcnZpY2VzL21pY3Jvc2VydmljZS9hcGknKTtcbiAgICB9KTtcbiAgfSk7XG59KTtcbiJdLCJ2ZXJzaW9uIjozfQ==